[
  {
    "objectID": "content/01_journal/01_fundamental.html",
    "href": "content/01_journal/01_fundamental.html",
    "title": "Fundamental",
    "section": "",
    "text": "library(tidyverse)\n\n#&gt; Warning: Paket 'tidyverse' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'ggplot2' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tibble' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tidyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'readr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'purrr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'dplyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'stringr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'forcats' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'lubridate' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(modelr)\n\n#&gt; Warning: Paket 'modelr' wurde unter R Version 4.2.3 erstellt\n\nlibrary(readxl)\n\n#&gt; Warning: Paket 'readxl' wurde unter R Version 4.2.3 erstellt\n\nlibrary(tidyverse)\nlibrary(broom)\n\n#&gt; \n#&gt; Attache Paket: 'broom'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:modelr':\n#&gt; \n#&gt;     bootstrap\n\nlibrary(umap)\nlibrary(ggrepel) # Addon for ggplot, so that the labels do not overlap\nlibrary(tidyquant) # TO use tq_theme()\n\n#&gt; Lade nötiges Paket: PerformanceAnalytics\n#&gt; Lade nötiges Paket: xts\n#&gt; Lade nötiges Paket: zoo\n#&gt; \n#&gt; Attache Paket: 'zoo'\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:base':\n#&gt; \n#&gt;     as.Date, as.Date.numeric\n#&gt; \n#&gt; \n#&gt; Attache Paket: 'xts'\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:dplyr':\n#&gt; \n#&gt;     first, last\n#&gt; \n#&gt; \n#&gt; Attache Paket: 'PerformanceAnalytics'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:graphics':\n#&gt; \n#&gt;     legend\n#&gt; \n#&gt; Lade nötiges Paket: quantmod\n#&gt; Lade nötiges Paket: TTR\n#&gt; Registered S3 method overwritten by 'quantmod':\n#&gt;   method            from\n#&gt;   as.zoo.data.frame zoo\n\n\n\n\n\n\nImportant: company, sector\nImportant: symbol, date, adjusted\nAdjusted means, price of stock after paying off dividends\n\n\nsp_500_daily_returns_tbl = readRDS(\"datas/sp_500_daily_returns_tbl.rds\")\n\nsp_500_index_tbl = readRDS(\"datas/sp_500_index_tbl.rds\")\n\nsp_500_prices_tbl = readRDS(\"datas/sp_500_prices_tbl.rds\")\n\nstock_date_matrix_table = readRDS(\"datas/stock_date_matrix_tbl.rds\")\n\n\n\n\nJoin table of index_tbl and prices_tbl\n\nsp_500_prices_index_joined_tbl = dplyr::left_join(sp_500_prices_tbl, sp_500_index_tbl, by = c(\"symbol\" = \"symbol\"))\n\nFiltering out non essentials and dates earlier than 2018\n\nsp_500_prices_index_joined_essentials_tbl = sp_500_prices_index_joined_tbl %&gt;% select(-open, -high, -low, -close, -volume, -weight, -shares_held) %&gt;%\n  filter(date &gt;= as.Date(\"2018-01-01\"))\n\nStandardize / Normalize\n\nsp_500_prices_index_joined_essentials_normalized_tbl = sp_500_prices_index_joined_essentials_tbl %&gt;%\n     group_by(symbol) %&gt;%\n    #mutate(adjusted_normalized = adjusted / sum(adjusted))\n    mutate(adjusted_normalized = scale(adjusted)) %&gt;%\n    mutate(percentage_change_adjusted_normalized = c(NA, diff(adjusted_normalized))*100) %&gt;%\n    mutate(percentage_change_adjusted = (adjusted_normalized - lag(adjusted_normalized)) / lag(adjusted_normalized)) %&gt;%\n    mutate(percentage_change_adjusted_using_adjusted = (adjusted - lag(adjusted)) / lag(adjusted)) %&gt;%\n    ungroup()\n\nCleaning previous table * This is the daily return table\n\nsp_500_prices_index_joined_essentials_normalized_latest_tbl = sp_500_prices_index_joined_essentials_normalized_tbl %&gt;% \n    select(-adjusted_normalized, -percentage_change_adjusted_normalized, -percentage_change_adjusted) %&gt;%\n    rename(pct_return = percentage_change_adjusted_using_adjusted)\n\nPick only symbol, date, pct_return * Naming readjustment: sp_500_prices_index_joined_essentials_normalized_latest_tbl &gt;&gt;&gt;&gt; sp_500_dailyreturns_tbl * Get rid of NA, change to 0\n\nsp_500_dailyreturns_tbl = sp_500_prices_index_joined_essentials_normalized_latest_tbl %&gt;%\n    select(-adjusted, -company, -sector)\n\nsp_500_dailyreturns_tbl[is.na(sp_500_dailyreturns_tbl)] = 0\n\nUser-Item (symbol - pct_return) format\n\nstock_date_matrix_tbl = sp_500_dailyreturns_tbl %&gt;%\n    select(symbol, date, pct_return) %&gt;%\n    pivot_wider(names_from = date, values_from = pct_return, values_fill = 0) %&gt;%\n    ungroup() %&gt;%\n    arrange(symbol) %&gt;%\n    select(-'2018-01-02')\n\nK Means Clustering\n\nkmeans_obj_challenge &lt;- stock_date_matrix_tbl %&gt;%\n    select(-symbol) %&gt;%\n    kmeans(centers = 4, nstart = 100)\n\n**Checking results*\n\nbroom::tidy(kmeans_obj_challenge) %&gt;% glimpse()\n\n#&gt; Rows: 4\n#&gt; Columns: 285\n#&gt; $ `2018-01-03` &lt;dbl&gt; 0.005217181, 0.014549433, -0.003333954, 0.014025528\n#&gt; $ `2018-01-04` &lt;dbl&gt; 0.004542594, 0.011343742, -0.006912672, 0.004891946\n#&gt; $ `2018-01-05` &lt;dbl&gt; 0.0065882996, 0.0006474687, 0.0012340690, 0.0092884855\n#&gt; $ `2018-01-08` &lt;dbl&gt; 0.001682355, 0.005827603, 0.005406745, 0.008080790\n#&gt; $ `2018-01-09` &lt;dbl&gt; 0.0035926461, -0.0061031977, -0.0089961936, -0.0003389287\n#&gt; $ `2018-01-10` &lt;dbl&gt; -0.0003417889, 0.0012472656, -0.0120427739, -0.0020594364\n#&gt; $ `2018-01-11` &lt;dbl&gt; 0.011272867, 0.023712257, -0.004826786, 0.009308274\n#&gt; $ `2018-01-12` &lt;dbl&gt; 0.008286783, 0.010296386, -0.005236483, 0.009571419\n#&gt; $ `2018-01-16` &lt;dbl&gt; -0.007601889, -0.014205000, 0.001309974, -0.008449825\n#&gt; $ `2018-01-17` &lt;dbl&gt; 0.007489971, 0.008879761, 0.007494267, 0.015404285\n#&gt; $ `2018-01-18` &lt;dbl&gt; -0.001424046, -0.009114860, -0.006708276, 0.001998036\n#&gt; $ `2018-01-19` &lt;dbl&gt; 0.007923882, 0.001324402, 0.004566404, 0.006715878\n#&gt; $ `2018-01-22` &lt;dbl&gt; 0.004611634, 0.024772066, 0.006985181, 0.009735809\n#&gt; $ `2018-01-23` &lt;dbl&gt; 0.0009158796, -0.0005949105, 0.0080806520, 0.0093980814\n#&gt; $ `2018-01-24` &lt;dbl&gt; 0.002736219, -0.006334400, -0.003852982, -0.007636793\n#&gt; $ `2018-01-25` &lt;dbl&gt; 6.261335e-05, -1.029610e-02, 5.819039e-03, -4.868228e-03\n#&gt; $ `2018-01-26` &lt;dbl&gt; 0.0112167041, 0.0060671176, 0.0008990918, 0.0166806037\n#&gt; $ `2018-01-29` &lt;dbl&gt; -0.006083350, -0.015217440, -0.011666174, -0.005021227\n#&gt; $ `2018-01-30` &lt;dbl&gt; -0.011773883, -0.021314151, -0.003053078, -0.009723839\n#&gt; $ `2018-01-31` &lt;dbl&gt; -0.003893409, 0.001732506, 0.010838715, 0.005783896\n#&gt; $ `2018-02-01` &lt;dbl&gt; -0.0002198492, 0.0088676780, -0.0147069869, 0.0021775377\n#&gt; $ `2018-02-02` &lt;dbl&gt; -0.01945987, -0.03741749, -0.01321817, -0.02295550\n#&gt; $ `2018-02-05` &lt;dbl&gt; -0.03929605, -0.03711698, -0.02624758, -0.03846852\n#&gt; $ `2018-02-06` &lt;dbl&gt; 0.014327389, 0.013342351, -0.000769148, 0.025070219\n#&gt; $ `2018-02-07` &lt;dbl&gt; 0.0006988956, -0.0190853955, -0.0052130982, -0.0074124405\n#&gt; $ `2018-02-08` &lt;dbl&gt; -0.03645141, -0.03955006, -0.02013127, -0.04115078\n#&gt; $ `2018-02-09` &lt;dbl&gt; 0.01201566, -0.00291801, 0.01909034, 0.02162704\n#&gt; $ `2018-02-12` &lt;dbl&gt; 0.012262163, 0.022509484, 0.005043885, 0.018492458\n#&gt; $ `2018-02-13` &lt;dbl&gt; 0.002250963, -0.006038450, 0.003804489, 0.008702354\n#&gt; $ `2018-02-14` &lt;dbl&gt; 0.017405799, 0.028709277, -0.004153567, 0.024552532\n#&gt; $ `2018-02-15` &lt;dbl&gt; 0.009018172, -0.005064078, 0.016542153, 0.016512878\n#&gt; $ `2018-02-16` &lt;dbl&gt; 0.0009879948, -0.0050865513, 0.0050883535, -0.0064207255\n#&gt; $ `2018-02-20` &lt;dbl&gt; -0.0076134581, 0.0004252287, -0.0117393604, 0.0060618583\n#&gt; $ `2018-02-21` &lt;dbl&gt; -0.002297952, -0.016731442, -0.016373701, -0.004441781\n#&gt; $ `2018-02-22` &lt;dbl&gt; -0.001782200, 0.009769590, 0.007334973, -0.002997867\n#&gt; $ `2018-02-23` &lt;dbl&gt; 0.01341795, 0.02115968, 0.01800925, 0.02195730\n#&gt; $ `2018-02-26` &lt;dbl&gt; 8.558352e-03, 9.924278e-05, 2.523189e-03, 1.220083e-02\n#&gt; $ `2018-02-27` &lt;dbl&gt; -0.013163471, -0.014163508, -0.016890593, -0.009308126\n#&gt; $ `2018-02-28` &lt;dbl&gt; -0.012030574, -0.023712904, -0.004953530, -0.005461278\n#&gt; $ `2018-03-01` &lt;dbl&gt; -0.013488875, 0.001114025, -0.000381493, -0.014143419\n#&gt; $ `2018-03-02` &lt;dbl&gt; 0.005346057, 0.007737213, 0.001200669, 0.021342169\n#&gt; $ `2018-03-05` &lt;dbl&gt; 0.01038346, 0.01108851, 0.01370457, 0.01379969\n#&gt; $ `2018-03-06` &lt;dbl&gt; 0.0061748492, 0.0003806278, -0.0019166661, 0.0087369561\n#&gt; $ `2018-03-07` &lt;dbl&gt; -0.001323156, -0.007205835, -0.002145171, 0.007337585\n#&gt; $ `2018-03-08` &lt;dbl&gt; 0.001313594, 0.001223280, 0.007270226, 0.008156522\n#&gt; $ `2018-03-09` &lt;dbl&gt; 0.017891556, 0.021309965, 0.004711574, 0.017801101\n#&gt; $ `2018-03-12` &lt;dbl&gt; -0.0035181932, -0.0005388962, 0.0031507710, 0.0027135945\n#&gt; $ `2018-03-13` &lt;dbl&gt; -0.003675462, -0.008199908, 0.001106390, -0.012076285\n#&gt; $ `2018-03-14` &lt;dbl&gt; -0.0084294900, -0.0017622280, 0.0009870808, 0.0002114269\n#&gt; $ `2018-03-15` &lt;dbl&gt; -0.001428887, -0.012297035, -0.002700715, -0.002123033\n#&gt; $ `2018-03-16` &lt;dbl&gt; 0.0043333233, 0.0129985324, 0.0054389622, 0.0008341013\n#&gt; $ `2018-03-19` &lt;dbl&gt; -0.010398300, -0.017670238, -0.007648673, -0.017248805\n#&gt; $ `2018-03-20` &lt;dbl&gt; 0.000171361, 0.013784848, -0.003879733, 0.004318024\n#&gt; $ `2018-03-21` &lt;dbl&gt; 0.0004388795, 0.0337207010, -0.0090580220, -0.0017923612\n#&gt; $ `2018-03-22` &lt;dbl&gt; -0.027250330, -0.021459951, -0.003464591, -0.026251915\n#&gt; $ `2018-03-23` &lt;dbl&gt; -0.019522841, -0.007163383, -0.013739589, -0.025754376\n#&gt; $ `2018-03-26` &lt;dbl&gt; 0.02449549, 0.01896047, 0.01267397, 0.03407693\n#&gt; $ `2018-03-27` &lt;dbl&gt; -0.013135617, -0.013465892, 0.007715361, -0.032635868\n#&gt; $ `2018-03-28` &lt;dbl&gt; -0.0004245702, -0.0233216532, 0.0112983042, -0.0121534871\n#&gt; $ `2018-03-29` &lt;dbl&gt; 0.013363731, 0.023735936, 0.004369175, 0.018762622\n#&gt; $ `2018-04-02` &lt;dbl&gt; -0.02238548, -0.02377674, -0.01422130, -0.02940422\n#&gt; $ `2018-04-03` &lt;dbl&gt; 0.012621133, 0.019605101, 0.007764893, 0.012355715\n#&gt; $ `2018-04-04` &lt;dbl&gt; 0.012434839, 0.001227871, 0.010279533, 0.015777681\n#&gt; $ `2018-04-05` &lt;dbl&gt; 0.007176211, 0.019447924, 0.002828578, 0.001453854\n#&gt; $ `2018-04-06` &lt;dbl&gt; -0.023302068, -0.022406930, -0.007734639, -0.029807187\n#&gt; $ `2018-04-09` &lt;dbl&gt; 0.0013397648, 0.0025547209, -0.0001039607, 0.0072958976\n#&gt; $ `2018-04-10` &lt;dbl&gt; 0.015147638, 0.038827519, -0.001881378, 0.025353351\n#&gt; $ `2018-04-11` &lt;dbl&gt; -0.0067400406, 0.0130939406, -0.0007348127, -0.0056141513\n#&gt; $ `2018-04-12` &lt;dbl&gt; 0.008179894, 0.001740217, -0.010752601, 0.015962569\n#&gt; $ `2018-04-13` &lt;dbl&gt; -0.005095188, 0.013155802, 0.005563910, -0.007832302\n#&gt; $ `2018-04-16` &lt;dbl&gt; 0.011016656, 0.008616509, 0.008682951, 0.004860507\n#&gt; $ `2018-04-17` &lt;dbl&gt; 0.006195900, 0.006042663, 0.007863409, 0.022161608\n#&gt; $ `2018-04-18` &lt;dbl&gt; 0.0032189057, 0.0206900471, -0.0046798570, 0.0002988631\n#&gt; $ `2018-04-19` &lt;dbl&gt; -0.003267487, 0.001786194, -0.013599108, -0.018124119\n#&gt; $ `2018-04-20` &lt;dbl&gt; -0.005666901, -0.003468391, -0.012187591, -0.010631547\n#&gt; $ `2018-04-23` &lt;dbl&gt; 0.002505648, 0.006591688, 0.001157400, -0.003682519\n#&gt; $ `2018-04-24` &lt;dbl&gt; -0.01123779, -0.01599992, 0.00221505, -0.01618772\n#&gt; $ `2018-04-25` &lt;dbl&gt; 0.0039772566, 0.0059983491, 0.0002285739, -0.0050286856\n#&gt; $ `2018-04-26` &lt;dbl&gt; 0.003569482, 0.011457675, 0.010261824, 0.020824552\n#&gt; $ `2018-04-27` &lt;dbl&gt; 0.003206567, -0.009243902, 0.011958287, -0.004572574\n#&gt; $ `2018-04-30` &lt;dbl&gt; -1.188822e-02, 5.650547e-05, -5.828280e-03, -4.215671e-03\n#&gt; $ `2018-05-01` &lt;dbl&gt; -0.0005850741, -0.0050385450, 0.0007776130, 0.0119120995\n#&gt; $ `2018-05-02` &lt;dbl&gt; -0.010327390, 0.008551843, -0.009884618, -0.003166279\n#&gt; $ `2018-05-03` &lt;dbl&gt; -0.005367388, -0.003354957, 0.001865179, 0.004031093\n#&gt; $ `2018-05-04` &lt;dbl&gt; 0.0118618730, 0.0002403534, 0.0115802919, 0.0152252115\n#&gt; $ `2018-05-07` &lt;dbl&gt; 0.0006844511, -0.0006381188, -0.0003423209, 0.0107081957\n#&gt; $ `2018-05-08` &lt;dbl&gt; 0.0007354292, 0.0103725962, -0.0117845845, 0.0042713777\n#&gt; $ `2018-05-09` &lt;dbl&gt; 0.006015187, 0.019005395, 0.002356665, 0.018287598\n#&gt; $ `2018-05-10` &lt;dbl&gt; 0.008198444, 0.003092002, 0.008776411, 0.012255246\n#&gt; $ `2018-05-11` &lt;dbl&gt; 0.003294055, -0.001898366, -0.001332108, -0.004284660\n#&gt; $ `2018-05-14` &lt;dbl&gt; 0.0005690565, 0.0057983409, -0.0055922557, 0.0016992322\n#&gt; $ `2018-05-15` &lt;dbl&gt; -0.003929441, 0.004290063, -0.011670012, -0.004501408\n#&gt; $ `2018-05-16` &lt;dbl&gt; 0.006577711, 0.008291791, -0.002364305, 0.008611112\n#&gt; $ `2018-05-17` &lt;dbl&gt; 0.001955032, 0.020700579, -0.004893340, -0.004584975\n#&gt; $ `2018-05-18` &lt;dbl&gt; -0.0005493316, -0.0059074763, -0.0039987220, -0.0022359815\n#&gt; $ `2018-05-21` &lt;dbl&gt; 0.005961593, 0.008283126, 0.005779365, 0.005922644\n#&gt; $ `2018-05-22` &lt;dbl&gt; -0.004840369, -0.013478278, 0.002482762, -0.003192814\n#&gt; $ `2018-05-23` &lt;dbl&gt; 0.0006489749, -0.0044105608, 0.0085556910, 0.0057628973\n#&gt; $ `2018-05-24` &lt;dbl&gt; 8.611148e-05, -1.261852e-02, 1.298424e-03, 1.489904e-03\n#&gt; $ `2018-05-25` &lt;dbl&gt; -0.0012343964, -0.0266239832, 0.0047986326, 0.0006639455\n#&gt; $ `2018-05-29` &lt;dbl&gt; -0.015959552, -0.001696881, 0.001238291, -0.006059243\n#&gt; $ `2018-05-30` &lt;dbl&gt; 0.012555582, 0.028669361, 0.011695739, 0.009546631\n#&gt; $ `2018-05-31` &lt;dbl&gt; -0.010942939, -0.012173706, -0.007053274, -0.001903148\n#&gt; $ `2018-06-01` &lt;dbl&gt; 0.010095531, 0.002155198, -0.003547776, 0.022277656\n#&gt; $ `2018-06-04` &lt;dbl&gt; 0.005981400, -0.012253263, 0.003162351, 0.003563116\n#&gt; $ `2018-06-05` &lt;dbl&gt; 0.003198089, -0.002154042, -0.005049502, 0.007483896\n#&gt; $ `2018-06-06` &lt;dbl&gt; 0.011968862, 0.003809198, -0.005781605, 0.008494834\n#&gt; $ `2018-06-07` &lt;dbl&gt; 0.001149033, 0.016374668, 0.002795166, -0.013241385\n#&gt; $ `2018-06-08` &lt;dbl&gt; 0.005784347, -0.004469895, 0.005472490, 0.004352640\n#&gt; $ `2018-06-11` &lt;dbl&gt; 0.001753974, 0.005602012, 0.001419442, 0.002487955\n#&gt; $ `2018-06-12` &lt;dbl&gt; 0.001399618, -0.005129724, 0.008011873, 0.008414511\n#&gt; $ `2018-06-13` &lt;dbl&gt; -0.0055633906, -0.0031941768, -0.0102443629, 0.0006958373\n#&gt; $ `2018-06-14` &lt;dbl&gt; 0.0009142176, -0.0051560680, 0.0089727967, 0.0095731668\n#&gt; $ `2018-06-15` &lt;dbl&gt; 0.001952892, -0.022707272, 0.005189750, -0.001900661\n#&gt; $ `2018-06-18` &lt;dbl&gt; -0.0026534461, 0.0173805699, -0.0037548361, 0.0009221515\n#&gt; $ `2018-06-19` &lt;dbl&gt; -0.0061898455, 0.0006035218, 0.0055750955, -0.0088464161\n#&gt; $ `2018-06-20` &lt;dbl&gt; 0.001076239, 0.010461839, 0.004292090, 0.006518084\n#&gt; $ `2018-06-21` &lt;dbl&gt; -0.005383937, -0.022917019, 0.003094840, -0.010378518\n#&gt; $ `2018-06-22` &lt;dbl&gt; 0.001021374, 0.024278987, 0.008221106, -0.007791614\n#&gt; $ `2018-06-25` &lt;dbl&gt; -0.011979354, -0.026779988, 0.009402708, -0.025003868\n#&gt; $ `2018-06-26` &lt;dbl&gt; -0.001118698, 0.017510326, 0.000226482, 0.003632608\n#&gt; $ `2018-06-27` &lt;dbl&gt; -0.010185976, 0.015372888, -0.001854346, -0.020827173\n#&gt; $ `2018-06-28` &lt;dbl&gt; 0.002804796, -0.003154605, 0.007254731, 0.010604506\n#&gt; $ `2018-06-29` &lt;dbl&gt; -6.855821e-05, 6.801777e-03, 6.340609e-04, 3.736572e-03\n#&gt; $ `2018-07-02` &lt;dbl&gt; 0.001471821, -0.016776871, -0.002681042, 0.007468319\n#&gt; $ `2018-07-03` &lt;dbl&gt; -0.001898671, 0.009084328, 0.004025346, -0.011619902\n#&gt; $ `2018-07-05` &lt;dbl&gt; 0.006614258, -0.001488715, 0.012383700, 0.013982441\n#&gt; $ `2018-07-06` &lt;dbl&gt; 0.006908309, 0.013008260, 0.005028909, 0.012671282\n#&gt; $ `2018-07-09` &lt;dbl&gt; 0.01402647, 0.01913839, -0.01604752, 0.00729805\n#&gt; $ `2018-07-10` &lt;dbl&gt; 0.001312620, 0.003473632, 0.006173772, 0.003275802\n#&gt; $ `2018-07-11` &lt;dbl&gt; -0.009738650, -0.024131440, 0.002633196, -0.008306789\n#&gt; $ `2018-07-12` &lt;dbl&gt; 4.563560e-03, 7.366942e-05, 7.831687e-04, 1.727150e-02\n#&gt; $ `2018-07-13` &lt;dbl&gt; 0.0012950176, 0.0050874219, 0.0004614193, -0.0023338092\n#&gt; $ `2018-07-16` &lt;dbl&gt; -0.001679823, -0.015230587, -0.004724125, -0.002482895\n#&gt; $ `2018-07-17` &lt;dbl&gt; 0.004588254, -0.001992870, -0.001728087, 0.008792052\n#&gt; $ `2018-07-18` &lt;dbl&gt; 0.005521811, 0.001663189, -0.007769495, 0.002761209\n#&gt; $ `2018-07-19` &lt;dbl&gt; -0.001518489, -0.001796304, 0.008153929, -0.004980070\n#&gt; $ `2018-07-20` &lt;dbl&gt; -0.002652620, -0.003616946, -0.005246509, -0.004154766\n#&gt; $ `2018-07-23` &lt;dbl&gt; 0.001778067, -0.003431901, -0.004892180, 0.002027684\n#&gt; $ `2018-07-24` &lt;dbl&gt; -0.0004441636, 0.0104494824, -0.0005005501, -0.0080874714\n#&gt; $ `2018-07-25` &lt;dbl&gt; 0.007192060, 0.008122618, 0.007607577, 0.016187298\n#&gt; $ `2018-07-26` &lt;dbl&gt; 0.0029787150, 0.0131985204, 0.0079688330, -0.0006751857\n#&gt; $ `2018-07-27` &lt;dbl&gt; -0.003446809, 0.001280992, -0.005027542, -0.020919476\n#&gt; $ `2018-07-30` &lt;dbl&gt; -0.003156086, 0.012986403, -0.002331982, -0.021618702\n#&gt; $ `2018-07-31` &lt;dbl&gt; 0.008038429, -0.002268616, 0.012574433, 0.002895817\n#&gt; $ `2018-08-01` &lt;dbl&gt; -0.007249964, -0.015730558, -0.002755748, -0.002711583\n#&gt; $ `2018-08-02` &lt;dbl&gt; 0.002993146, -0.002134323, 0.004132915, 0.014229673\n#&gt; $ `2018-08-03` &lt;dbl&gt; 0.0051696868, -0.0073460616, 0.0134441240, -0.0002601396\n#&gt; $ `2018-08-06` &lt;dbl&gt; 0.0014640732, 0.0052397976, 0.0002851608, 0.0082356891\n#&gt; $ `2018-08-07` &lt;dbl&gt; 0.003157818, 0.003959465, -0.003699128, 0.003361766\n#&gt; $ `2018-08-08` &lt;dbl&gt; -0.0006984346, -0.0085479395, -0.0047101273, 0.0003471306\n#&gt; $ `2018-08-09` &lt;dbl&gt; -0.0007957794, -0.0108872145, 0.0015381073, -0.0008920641\n#&gt; $ `2018-08-10` &lt;dbl&gt; -0.008728654, 0.007638768, -0.005940741, -0.009182561\n#&gt; $ `2018-08-13` &lt;dbl&gt; -0.0054871905, -0.0144547914, 0.0008234634, -0.0022671805\n#&gt; $ `2018-08-14` &lt;dbl&gt; 0.010200628, 0.004542780, 0.004398117, 0.006780214\n#&gt; $ `2018-08-15` &lt;dbl&gt; -0.006691091, -0.042438317, 0.008029299, -0.015767129\n#&gt; $ `2018-08-16` &lt;dbl&gt; 0.008967913, 0.006339482, 0.009135530, 0.004438533\n#&gt; $ `2018-08-17` &lt;dbl&gt; 0.006126832, 0.003224037, 0.007732354, -0.001760454\n#&gt; $ `2018-08-20` &lt;dbl&gt; 5.942634e-03, 8.421130e-03, 2.692069e-07, 4.049175e-03\n#&gt; $ `2018-08-21` &lt;dbl&gt; 0.005122876, 0.008349307, -0.009589298, 0.008199431\n#&gt; $ `2018-08-22` &lt;dbl&gt; -0.003894045, 0.013378383, -0.006575943, 0.006730186\n#&gt; $ `2018-08-23` &lt;dbl&gt; -0.003921203, -0.005292100, -0.001255369, 0.001981029\n#&gt; $ `2018-08-24` &lt;dbl&gt; 0.003449513, 0.008073458, 0.004500810, 0.015124691\n#&gt; $ `2018-08-27` &lt;dbl&gt; 0.007595955, 0.009180901, -0.002951911, 0.009845194\n#&gt; $ `2018-08-28` &lt;dbl&gt; 4.536910e-06, -5.525657e-03, 1.332308e-03, 3.794339e-03\n#&gt; $ `2018-08-29` &lt;dbl&gt; 0.003219045, 0.007257279, 0.002524474, 0.007306630\n#&gt; $ `2018-08-30` &lt;dbl&gt; -0.007957643, -0.002890487, -0.002927028, -0.006688627\n#&gt; $ `2018-08-31` &lt;dbl&gt; 0.0014553869, -0.0073978491, 0.0011652746, 0.0006588377\n#&gt; $ `2018-09-04` &lt;dbl&gt; -0.0012439741, -0.0073232978, -0.0024738521, -0.0009675634\n#&gt; $ `2018-09-05` &lt;dbl&gt; 0.002183078, -0.004506993, 0.010518901, -0.018543501\n#&gt; $ `2018-09-06` &lt;dbl&gt; -0.000759536, -0.019382860, 0.005232278, -0.011209654\n#&gt; $ `2018-09-07` &lt;dbl&gt; -0.001954284, -0.004880020, -0.009005451, -0.004386366\n#&gt; $ `2018-09-10` &lt;dbl&gt; 0.0029803154, 0.0006737391, 0.0056867858, 0.0087879660\n#&gt; $ `2018-09-11` &lt;dbl&gt; 0.0005049789, 0.0122762856, -0.0019538731, 0.0018295441\n#&gt; $ `2018-09-12` &lt;dbl&gt; 0.001161493, 0.009381701, 0.003579706, -0.002137449\n#&gt; $ `2018-09-13` &lt;dbl&gt; 4.018751e-03, -2.306182e-06, 4.775531e-03, 6.462456e-03\n#&gt; $ `2018-09-14` &lt;dbl&gt; 0.003053672, 0.004538664, -0.005895538, 0.001758224\n#&gt; $ `2018-09-17` &lt;dbl&gt; -0.0031778985, 0.0006103131, 0.0034210890, -0.0163136879\n#&gt; $ `2018-09-18` &lt;dbl&gt; 0.005551467, 0.011631923, -0.005822705, 0.010072334\n#&gt; $ `2018-09-19` &lt;dbl&gt; 0.004069505, 0.002892712, -0.012892316, -0.002499493\n#&gt; $ `2018-09-20` &lt;dbl&gt; 0.006322862, -0.004188770, 0.006698837, 0.012692587\n#&gt; $ `2018-09-21` &lt;dbl&gt; 0.0003726642, 0.0082752213, 0.0026245042, -0.0003286405\n#&gt; $ `2018-09-24` &lt;dbl&gt; -0.010072955, 0.013828416, -0.014558807, 0.006489045\n#&gt; $ `2018-09-25` &lt;dbl&gt; -0.0034740979, 0.0079921453, -0.0056531970, -0.0008218263\n#&gt; $ `2018-09-26` &lt;dbl&gt; -0.002645426, -0.009821787, -0.008520217, -0.002833221\n#&gt; $ `2018-09-27` &lt;dbl&gt; -0.0009807794, -0.0002961086, 0.0010554973, 0.0055217433\n#&gt; $ `2018-09-28` &lt;dbl&gt; -0.0007368244, 0.0005533699, 0.0117954826, 0.0020502699\n#&gt; $ `2018-10-01` &lt;dbl&gt; 0.001618323, 0.013778724, -0.004743913, -0.004922243\n#&gt; $ `2018-10-02` &lt;dbl&gt; -0.0021978236, -0.0008793832, 0.0063449319, -0.0096354843\n#&gt; $ `2018-10-03` &lt;dbl&gt; 0.001595167, 0.013208412, -0.010963752, 0.003528746\n#&gt; $ `2018-10-04` &lt;dbl&gt; -0.0056339596, -0.0075673719, 0.0005911404, -0.0233264347\n#&gt; $ `2018-10-05` &lt;dbl&gt; -0.005892240, -0.002222662, 0.007115132, -0.017356286\n#&gt; $ `2018-10-08` &lt;dbl&gt; 0.002315831, -0.004422415, 0.011777449, -0.016146227\n#&gt; $ `2018-10-09` &lt;dbl&gt; -0.008888514, 0.011660485, 0.001382168, -0.002245737\n#&gt; $ `2018-10-10` &lt;dbl&gt; -0.02905836, -0.04102685, -0.01068745, -0.04697040\n#&gt; $ `2018-10-11` &lt;dbl&gt; -0.02220585, -0.03066850, -0.02451301, -0.01005558\n#&gt; $ `2018-10-12` &lt;dbl&gt; 0.0079626327, 0.0059181717, 0.0009265891, 0.0285292180\n#&gt; $ `2018-10-15` &lt;dbl&gt; 0.0003925018, -0.0069465232, 0.0063396100, -0.0109009681\n#&gt; $ `2018-10-16` &lt;dbl&gt; 0.01900308, 0.01198762, 0.01495123, 0.03496553\n#&gt; $ `2018-10-17` &lt;dbl&gt; -0.0022031050, -0.0121314041, -0.0014392965, -0.0001182299\n#&gt; $ `2018-10-18` &lt;dbl&gt; -0.0143254165, -0.0110406026, 0.0003157027, -0.0250782664\n#&gt; $ `2018-10-19` &lt;dbl&gt; -0.004171677, -0.013063143, 0.014528266, -0.012541599\n#&gt; $ `2018-10-22` &lt;dbl&gt; -0.006903643, -0.010377735, -0.009878428, 0.003844884\n#&gt; $ `2018-10-23` &lt;dbl&gt; -0.006763992, -0.029278040, 0.002693487, -0.003859615\n#&gt; $ `2018-10-24` &lt;dbl&gt; -0.03132646, -0.04585749, 0.01353611, -0.05208563\n#&gt; $ `2018-10-25` &lt;dbl&gt; 0.015441294, 0.015249528, -0.003340079, 0.028991360\n#&gt; $ `2018-10-26` &lt;dbl&gt; -0.012819263, -0.009554609, -0.020372884, -0.023718562\n#&gt; $ `2018-10-29` &lt;dbl&gt; 0.001596918, -0.024947273, 0.014181789, -0.018802822\n#&gt; $ `2018-10-30` &lt;dbl&gt; 0.01998755, 0.02341653, 0.01125114, 0.03454404\n#&gt; $ `2018-10-31` &lt;dbl&gt; 0.008027797, 0.006087733, -0.011297427, 0.021504480\n#&gt; $ `2018-11-01` &lt;dbl&gt; 0.015634660, 0.010308997, 0.003747117, 0.032081398\n#&gt; $ `2018-11-02` &lt;dbl&gt; -0.001293155, -0.009730453, -0.009108626, -0.003883827\n#&gt; $ `2018-11-05` &lt;dbl&gt; 0.006938079, 0.018923407, 0.013772235, -0.005924196\n#&gt; $ `2018-11-06` &lt;dbl&gt; 0.007426739, 0.002004953, 0.008152953, 0.005474840\n#&gt; $ `2018-11-07` &lt;dbl&gt; 0.014704492, 0.022724471, 0.008792495, 0.027114895\n#&gt; $ `2018-11-08` &lt;dbl&gt; 0.0004365969, -0.0277091571, 0.0004581358, -0.0034784146\n#&gt; $ `2018-11-09` &lt;dbl&gt; -0.008675371, -0.004971914, 0.005367340, -0.024619687\n#&gt; $ `2018-11-12` &lt;dbl&gt; -0.015211256, -0.029063167, 0.001904854, -0.033687808\n#&gt; $ `2018-11-13` &lt;dbl&gt; 0.0008174817, -0.0251968257, 0.0001916946, 0.0041571717\n#&gt; $ `2018-11-14` &lt;dbl&gt; -0.007268626, 0.003142088, -0.004133400, -0.005272713\n#&gt; $ `2018-11-15` &lt;dbl&gt; 0.008872325, 0.020515330, -0.004406745, 0.023355178\n#&gt; $ `2018-11-16` &lt;dbl&gt; 0.002216731, 0.007680349, 0.010063612, -0.005298491\n#&gt; $ `2018-11-19` &lt;dbl&gt; -0.012261967, -0.006087903, 0.001588685, -0.044615610\n#&gt; $ `2018-11-20` &lt;dbl&gt; -0.018868549, -0.040522927, -0.008086658, -0.007829112\n#&gt; $ `2018-11-21` &lt;dbl&gt; 0.007797251, 0.018658251, -0.006933761, 0.012297653\n#&gt; $ `2018-11-23` &lt;dbl&gt; -1.868033e-03, -3.653804e-02, -7.387090e-06, -2.928696e-03\n#&gt; $ `2018-11-26` &lt;dbl&gt; 0.01391096, 0.02157185, 0.00222745, 0.02792190\n#&gt; $ `2018-11-27` &lt;dbl&gt; -0.001218930, -0.006230058, 0.005847793, 0.000669214\n#&gt; $ `2018-11-28` &lt;dbl&gt; 0.020257793, 0.016374453, 0.002822177, 0.032255508\n#&gt; $ `2018-11-29` &lt;dbl&gt; -0.0037995937, 0.0053696702, 0.0002154275, -0.0073804570\n#&gt; $ `2018-11-30` &lt;dbl&gt; 0.005229962, -0.006236157, 0.011292338, 0.008241973\n#&gt; $ `2018-12-03` &lt;dbl&gt; 0.008915859, 0.026350978, 0.003797532, 0.021707438\n#&gt; $ `2018-12-04` &lt;dbl&gt; -0.034976107, -0.035131989, -0.008022436, -0.044736643\n#&gt; $ `2018-12-06` &lt;dbl&gt; -0.006218295, -0.025829610, 0.009630455, 0.008023883\n#&gt; $ `2018-12-07` &lt;dbl&gt; -0.023407900, -0.007277311, -0.007000921, -0.037844459\n#&gt; $ `2018-12-10` &lt;dbl&gt; -0.003215619, -0.022566657, -0.000701633, 0.009075633\n#&gt; $ `2018-12-11` &lt;dbl&gt; -0.003893997, -0.003490909, 0.004753714, 0.001617522\n#&gt; $ `2018-12-12` &lt;dbl&gt; 0.00769762, 0.01204804, -0.00950557, 0.01094937\n#&gt; $ `2018-12-13` &lt;dbl&gt; -0.008218803, -0.002388297, 0.008867633, -0.009546741\n#&gt; $ `2018-12-14` &lt;dbl&gt; -0.014658242, -0.028984553, -0.006215472, -0.020016222\n#&gt; $ `2018-12-17` &lt;dbl&gt; -0.01759075, -0.01903142, -0.03181874, -0.02540093\n#&gt; $ `2018-12-18` &lt;dbl&gt; -0.001704006, -0.022103904, -0.002335696, 0.010933420\n#&gt; $ `2018-12-19` &lt;dbl&gt; -0.015390412, -0.013217782, -0.005963248, -0.029032982\n#&gt; $ `2018-12-20` &lt;dbl&gt; -0.016571956, -0.028551975, -0.009304501, -0.017370866\n#&gt; $ `2018-12-21` &lt;dbl&gt; -0.01838267, -0.01564321, -0.01104888, -0.03004544\n#&gt; $ `2018-12-24` &lt;dbl&gt; -0.02226213, -0.04288499, -0.03925786, -0.02366252\n#&gt; $ `2018-12-26` &lt;dbl&gt; 0.04534322, 0.07139516, 0.02519597, 0.06254006\n#&gt; $ `2018-12-27` &lt;dbl&gt; 0.008903106, 0.003921202, 0.005720476, 0.010954290\n#&gt; $ `2018-12-28` &lt;dbl&gt; -0.0019643956, -0.0097765403, 0.0005493469, -0.0021091840\n#&gt; $ `2018-12-31` &lt;dbl&gt; 0.009390790, 0.006628301, 0.003374524, 0.008540171\n#&gt; $ `2019-01-02` &lt;dbl&gt; 0.002999051, 0.019069103, -0.017623973, 0.003843006\n#&gt; $ `2019-01-03` &lt;dbl&gt; -0.020498572, -0.007154041, 0.003428785, -0.042207626\n#&gt; $ `2019-01-04` &lt;dbl&gt; 0.03395158, 0.04511775, 0.01352601, 0.04949310\n#&gt; $ `2019-01-07` &lt;dbl&gt; 0.009397651, 0.020515467, 0.002960760, 0.021900070\n#&gt; $ `2019-01-08` &lt;dbl&gt; 0.009803304, 0.011879849, 0.014579573, 0.011169862\n#&gt; $ `2019-01-09` &lt;dbl&gt; 0.006131962, 0.021232497, -0.004437992, 0.017527869\n#&gt; $ `2019-01-10` &lt;dbl&gt; 0.004161268, 0.007079545, 0.014320030, 0.006892676\n#&gt; $ `2019-01-11` &lt;dbl&gt; 0.0019697839, -0.0044939986, 0.0006439650, -0.0000643815\n#&gt; $ `2019-01-14` &lt;dbl&gt; -2.211265e-03, -5.779135e-05, -7.487770e-03, -1.263161e-02\n#&gt; $ `2019-01-15` &lt;dbl&gt; 0.004755527, 0.004220701, 0.011233657, 0.016148265\n#&gt; $ `2019-01-16` &lt;dbl&gt; 0.0034638122, 0.0005469789, 0.0018849468, -0.0003493891\n#&gt; $ `2019-01-17` &lt;dbl&gt; 0.009621661, 0.013001543, 0.005550432, 0.009778713\n#&gt; $ `2019-01-18` &lt;dbl&gt; 0.016372572, 0.020885746, 0.005066536, 0.018933426\n#&gt; $ `2019-01-22` &lt;dbl&gt; -0.013525856, -0.026342440, -0.003042516, -0.022274543\n#&gt; $ `2019-01-23` &lt;dbl&gt; 0.0008376363, -0.0139855530, 0.0054318391, -0.0051502604\n#&gt; $ `2019-01-24` &lt;dbl&gt; 0.002910626, 0.002068247, -0.002902421, 0.025276525\n#&gt; $ `2019-01-25` &lt;dbl&gt; 0.0104049820, 0.0200460247, -0.0007662691, 0.0213786649\n#&gt; $ `2019-01-28` &lt;dbl&gt; -0.003409732, -0.015255646, 0.003788257, -0.011670435\n#&gt; $ `2019-01-29` &lt;dbl&gt; 0.003457064, 0.006852493, 0.004292367, -0.013352553\n#&gt; $ `2019-01-30` &lt;dbl&gt; 0.007812059, 0.020060173, 0.007180800, 0.025220812\n#&gt; $ `2019-01-31` &lt;dbl&gt; 0.0051356841, -0.0004307433, 0.0144310699, 0.0100370290\n#&gt; $ `2019-02-01` &lt;dbl&gt; 0.002655385, 0.008515918, -0.004675601, 0.008579466\n#&gt; $ `2019-02-04` &lt;dbl&gt; 0.004837957, 0.006715036, 0.004866655, 0.006612912\n#&gt; $ `2019-02-05` &lt;dbl&gt; 0.004876282, -0.001705462, 0.001337625, 0.007444096\n#&gt; $ `2019-02-06` &lt;dbl&gt; -0.0007242068, -0.0072253794, -0.0032362265, 0.0011515879\n#&gt; $ `2019-02-07` &lt;dbl&gt; -0.005505920, -0.032870943, 0.005879985, -0.016007614\n#&gt; $ `2019-02-08` &lt;dbl&gt; 0.0003808557, -0.0073106553, 0.0041796637, 0.0108905276\n#&gt; $ `2019-02-11` &lt;dbl&gt; 0.002443940, 0.009675432, 0.001155150, 0.002164051\n#&gt; $ `2019-02-12` &lt;dbl&gt; 0.0144575364, 0.0109777684, -0.0007469276, 0.0187379927\n#&gt; $ `2019-02-13` &lt;dbl&gt; 0.003986743, 0.018636127, 0.001301848, 0.002882583\n#&gt; $ `2019-02-14` &lt;dbl&gt; -0.0036341950, 0.0069304497, -0.0018576514, 0.0008287979\n#&gt; $ `2019-02-15` &lt;dbl&gt; 0.013290681, 0.016988955, 0.006505341, 0.003344893\n#&gt; $ size         &lt;int&gt; 317, 30, 84, 71\n#&gt; $ withinss     &lt;dbl&gt; 18.051976, 1.588895, 2.554867, 7.009809\n#&gt; $ cluster      &lt;fct&gt; 1, 2, 3, 4\n\nbroom::glance(kmeans_obj_challenge)\n\n\n\n  \n\n\n\nAugment\n\n# Add the clusters to the data\nbroom::augment(kmeans_obj_challenge, stock_date_matrix_tbl) %&gt;%\n    select(symbol, .cluster)\n\n\n\n  \n\n\n\nMap Clusters\n\nkmeans_mapper &lt;- function(centers = 4) {\n    \n    stock_date_matrix_tbl %&gt;%\n        select(-symbol) %&gt;%\n        kmeans(centers = centers, nstart = 100)\n}\n\n4 %&gt;% kmeans_mapper() %&gt;% glance()\n\n\n\n  \n\n\n\nMap function to many elements\n\n# Mapping the function to many elements\nkmeans_mapped_tbl_challenge &lt;- tibble(centers = 1:30) %&gt;%\n    mutate(k_means = centers %&gt;% map(kmeans_mapper)) %&gt;%\n    mutate(glance  = k_means %&gt;% map(glance))\n\n#&gt; Warning: There was 1 warning in `mutate()`.\n#&gt; ℹ In argument: `k_means = centers %&gt;% map(kmeans_mapper)`.\n#&gt; Caused by warning:\n#&gt; ! keine Konvergenz nach 10 Schritten\n\n\ntot.wihinss\n\nkmeans_mapped_tbl_challenge %&gt;%\n    unnest(glance) %&gt;%\n    select(centers, tot.withinss)\n\n\n\n  \n\n\n\nSkree PLot\n\n#Skree Plot ----\n\nkmeans_mapped_tbl_challenge %&gt;%\n    unnest(glance) %&gt;%\n    select(centers, tot.withinss) %&gt;%\n    \n    # Visualization\n    ggplot(aes(centers, tot.withinss)) +\n    geom_point(color = \"#2DC6D6\", size = 4) +\n    geom_line(color = \"#2DC6D6\", size = 1) +\n    # Add labels (which are repelled a little)\n    ggrepel::geom_label_repel(aes(label = centers), color = \"#2DC6D6\") + \n    \n    # Formatting\n    labs(title = \"Skree Plot\",\n    subtitle = \"Measures the distance each of the customer are from the closes K-Means center\",\n    caption = \"Conclusion: Based on the Scree Plot, we select 4 clusters to segment the customer base.\")\n\n#&gt; Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#&gt; ℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/01_journal/01_fundamental.html#libraries",
    "href": "content/01_journal/01_fundamental.html#libraries",
    "title": "Fundamental",
    "section": "",
    "text": "library(tidyverse)\n\n#&gt; Warning: Paket 'tidyverse' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'ggplot2' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tibble' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tidyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'readr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'purrr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'dplyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'stringr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'forcats' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'lubridate' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(modelr)\n\n#&gt; Warning: Paket 'modelr' wurde unter R Version 4.2.3 erstellt\n\nlibrary(readxl)\n\n#&gt; Warning: Paket 'readxl' wurde unter R Version 4.2.3 erstellt\n\nlibrary(tidyverse)\nlibrary(broom)\n\n#&gt; \n#&gt; Attache Paket: 'broom'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:modelr':\n#&gt; \n#&gt;     bootstrap\n\nlibrary(umap)\nlibrary(ggrepel) # Addon for ggplot, so that the labels do not overlap\nlibrary(tidyquant) # TO use tq_theme()\n\n#&gt; Lade nötiges Paket: PerformanceAnalytics\n#&gt; Lade nötiges Paket: xts\n#&gt; Lade nötiges Paket: zoo\n#&gt; \n#&gt; Attache Paket: 'zoo'\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:base':\n#&gt; \n#&gt;     as.Date, as.Date.numeric\n#&gt; \n#&gt; \n#&gt; Attache Paket: 'xts'\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:dplyr':\n#&gt; \n#&gt;     first, last\n#&gt; \n#&gt; \n#&gt; Attache Paket: 'PerformanceAnalytics'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:graphics':\n#&gt; \n#&gt;     legend\n#&gt; \n#&gt; Lade nötiges Paket: quantmod\n#&gt; Lade nötiges Paket: TTR\n#&gt; Registered S3 method overwritten by 'quantmod':\n#&gt;   method            from\n#&gt;   as.zoo.data.frame zoo"
  },
  {
    "objectID": "content/01_journal/01_fundamental.html#get-data",
    "href": "content/01_journal/01_fundamental.html#get-data",
    "title": "Fundamental",
    "section": "",
    "text": "Important: company, sector\nImportant: symbol, date, adjusted\nAdjusted means, price of stock after paying off dividends\n\n\nsp_500_daily_returns_tbl = readRDS(\"datas/sp_500_daily_returns_tbl.rds\")\n\nsp_500_index_tbl = readRDS(\"datas/sp_500_index_tbl.rds\")\n\nsp_500_prices_tbl = readRDS(\"datas/sp_500_prices_tbl.rds\")\n\nstock_date_matrix_table = readRDS(\"datas/stock_date_matrix_tbl.rds\")"
  },
  {
    "objectID": "content/01_journal/01_fundamental.html#preprocessing",
    "href": "content/01_journal/01_fundamental.html#preprocessing",
    "title": "Fundamental",
    "section": "",
    "text": "Join table of index_tbl and prices_tbl\n\nsp_500_prices_index_joined_tbl = dplyr::left_join(sp_500_prices_tbl, sp_500_index_tbl, by = c(\"symbol\" = \"symbol\"))\n\nFiltering out non essentials and dates earlier than 2018\n\nsp_500_prices_index_joined_essentials_tbl = sp_500_prices_index_joined_tbl %&gt;% select(-open, -high, -low, -close, -volume, -weight, -shares_held) %&gt;%\n  filter(date &gt;= as.Date(\"2018-01-01\"))\n\nStandardize / Normalize\n\nsp_500_prices_index_joined_essentials_normalized_tbl = sp_500_prices_index_joined_essentials_tbl %&gt;%\n     group_by(symbol) %&gt;%\n    #mutate(adjusted_normalized = adjusted / sum(adjusted))\n    mutate(adjusted_normalized = scale(adjusted)) %&gt;%\n    mutate(percentage_change_adjusted_normalized = c(NA, diff(adjusted_normalized))*100) %&gt;%\n    mutate(percentage_change_adjusted = (adjusted_normalized - lag(adjusted_normalized)) / lag(adjusted_normalized)) %&gt;%\n    mutate(percentage_change_adjusted_using_adjusted = (adjusted - lag(adjusted)) / lag(adjusted)) %&gt;%\n    ungroup()\n\nCleaning previous table * This is the daily return table\n\nsp_500_prices_index_joined_essentials_normalized_latest_tbl = sp_500_prices_index_joined_essentials_normalized_tbl %&gt;% \n    select(-adjusted_normalized, -percentage_change_adjusted_normalized, -percentage_change_adjusted) %&gt;%\n    rename(pct_return = percentage_change_adjusted_using_adjusted)\n\nPick only symbol, date, pct_return * Naming readjustment: sp_500_prices_index_joined_essentials_normalized_latest_tbl &gt;&gt;&gt;&gt; sp_500_dailyreturns_tbl * Get rid of NA, change to 0\n\nsp_500_dailyreturns_tbl = sp_500_prices_index_joined_essentials_normalized_latest_tbl %&gt;%\n    select(-adjusted, -company, -sector)\n\nsp_500_dailyreturns_tbl[is.na(sp_500_dailyreturns_tbl)] = 0\n\nUser-Item (symbol - pct_return) format\n\nstock_date_matrix_tbl = sp_500_dailyreturns_tbl %&gt;%\n    select(symbol, date, pct_return) %&gt;%\n    pivot_wider(names_from = date, values_from = pct_return, values_fill = 0) %&gt;%\n    ungroup() %&gt;%\n    arrange(symbol) %&gt;%\n    select(-'2018-01-02')\n\nK Means Clustering\n\nkmeans_obj_challenge &lt;- stock_date_matrix_tbl %&gt;%\n    select(-symbol) %&gt;%\n    kmeans(centers = 4, nstart = 100)\n\n**Checking results*\n\nbroom::tidy(kmeans_obj_challenge) %&gt;% glimpse()\n\n#&gt; Rows: 4\n#&gt; Columns: 285\n#&gt; $ `2018-01-03` &lt;dbl&gt; 0.005217181, 0.014549433, -0.003333954, 0.014025528\n#&gt; $ `2018-01-04` &lt;dbl&gt; 0.004542594, 0.011343742, -0.006912672, 0.004891946\n#&gt; $ `2018-01-05` &lt;dbl&gt; 0.0065882996, 0.0006474687, 0.0012340690, 0.0092884855\n#&gt; $ `2018-01-08` &lt;dbl&gt; 0.001682355, 0.005827603, 0.005406745, 0.008080790\n#&gt; $ `2018-01-09` &lt;dbl&gt; 0.0035926461, -0.0061031977, -0.0089961936, -0.0003389287\n#&gt; $ `2018-01-10` &lt;dbl&gt; -0.0003417889, 0.0012472656, -0.0120427739, -0.0020594364\n#&gt; $ `2018-01-11` &lt;dbl&gt; 0.011272867, 0.023712257, -0.004826786, 0.009308274\n#&gt; $ `2018-01-12` &lt;dbl&gt; 0.008286783, 0.010296386, -0.005236483, 0.009571419\n#&gt; $ `2018-01-16` &lt;dbl&gt; -0.007601889, -0.014205000, 0.001309974, -0.008449825\n#&gt; $ `2018-01-17` &lt;dbl&gt; 0.007489971, 0.008879761, 0.007494267, 0.015404285\n#&gt; $ `2018-01-18` &lt;dbl&gt; -0.001424046, -0.009114860, -0.006708276, 0.001998036\n#&gt; $ `2018-01-19` &lt;dbl&gt; 0.007923882, 0.001324402, 0.004566404, 0.006715878\n#&gt; $ `2018-01-22` &lt;dbl&gt; 0.004611634, 0.024772066, 0.006985181, 0.009735809\n#&gt; $ `2018-01-23` &lt;dbl&gt; 0.0009158796, -0.0005949105, 0.0080806520, 0.0093980814\n#&gt; $ `2018-01-24` &lt;dbl&gt; 0.002736219, -0.006334400, -0.003852982, -0.007636793\n#&gt; $ `2018-01-25` &lt;dbl&gt; 6.261335e-05, -1.029610e-02, 5.819039e-03, -4.868228e-03\n#&gt; $ `2018-01-26` &lt;dbl&gt; 0.0112167041, 0.0060671176, 0.0008990918, 0.0166806037\n#&gt; $ `2018-01-29` &lt;dbl&gt; -0.006083350, -0.015217440, -0.011666174, -0.005021227\n#&gt; $ `2018-01-30` &lt;dbl&gt; -0.011773883, -0.021314151, -0.003053078, -0.009723839\n#&gt; $ `2018-01-31` &lt;dbl&gt; -0.003893409, 0.001732506, 0.010838715, 0.005783896\n#&gt; $ `2018-02-01` &lt;dbl&gt; -0.0002198492, 0.0088676780, -0.0147069869, 0.0021775377\n#&gt; $ `2018-02-02` &lt;dbl&gt; -0.01945987, -0.03741749, -0.01321817, -0.02295550\n#&gt; $ `2018-02-05` &lt;dbl&gt; -0.03929605, -0.03711698, -0.02624758, -0.03846852\n#&gt; $ `2018-02-06` &lt;dbl&gt; 0.014327389, 0.013342351, -0.000769148, 0.025070219\n#&gt; $ `2018-02-07` &lt;dbl&gt; 0.0006988956, -0.0190853955, -0.0052130982, -0.0074124405\n#&gt; $ `2018-02-08` &lt;dbl&gt; -0.03645141, -0.03955006, -0.02013127, -0.04115078\n#&gt; $ `2018-02-09` &lt;dbl&gt; 0.01201566, -0.00291801, 0.01909034, 0.02162704\n#&gt; $ `2018-02-12` &lt;dbl&gt; 0.012262163, 0.022509484, 0.005043885, 0.018492458\n#&gt; $ `2018-02-13` &lt;dbl&gt; 0.002250963, -0.006038450, 0.003804489, 0.008702354\n#&gt; $ `2018-02-14` &lt;dbl&gt; 0.017405799, 0.028709277, -0.004153567, 0.024552532\n#&gt; $ `2018-02-15` &lt;dbl&gt; 0.009018172, -0.005064078, 0.016542153, 0.016512878\n#&gt; $ `2018-02-16` &lt;dbl&gt; 0.0009879948, -0.0050865513, 0.0050883535, -0.0064207255\n#&gt; $ `2018-02-20` &lt;dbl&gt; -0.0076134581, 0.0004252287, -0.0117393604, 0.0060618583\n#&gt; $ `2018-02-21` &lt;dbl&gt; -0.002297952, -0.016731442, -0.016373701, -0.004441781\n#&gt; $ `2018-02-22` &lt;dbl&gt; -0.001782200, 0.009769590, 0.007334973, -0.002997867\n#&gt; $ `2018-02-23` &lt;dbl&gt; 0.01341795, 0.02115968, 0.01800925, 0.02195730\n#&gt; $ `2018-02-26` &lt;dbl&gt; 8.558352e-03, 9.924278e-05, 2.523189e-03, 1.220083e-02\n#&gt; $ `2018-02-27` &lt;dbl&gt; -0.013163471, -0.014163508, -0.016890593, -0.009308126\n#&gt; $ `2018-02-28` &lt;dbl&gt; -0.012030574, -0.023712904, -0.004953530, -0.005461278\n#&gt; $ `2018-03-01` &lt;dbl&gt; -0.013488875, 0.001114025, -0.000381493, -0.014143419\n#&gt; $ `2018-03-02` &lt;dbl&gt; 0.005346057, 0.007737213, 0.001200669, 0.021342169\n#&gt; $ `2018-03-05` &lt;dbl&gt; 0.01038346, 0.01108851, 0.01370457, 0.01379969\n#&gt; $ `2018-03-06` &lt;dbl&gt; 0.0061748492, 0.0003806278, -0.0019166661, 0.0087369561\n#&gt; $ `2018-03-07` &lt;dbl&gt; -0.001323156, -0.007205835, -0.002145171, 0.007337585\n#&gt; $ `2018-03-08` &lt;dbl&gt; 0.001313594, 0.001223280, 0.007270226, 0.008156522\n#&gt; $ `2018-03-09` &lt;dbl&gt; 0.017891556, 0.021309965, 0.004711574, 0.017801101\n#&gt; $ `2018-03-12` &lt;dbl&gt; -0.0035181932, -0.0005388962, 0.0031507710, 0.0027135945\n#&gt; $ `2018-03-13` &lt;dbl&gt; -0.003675462, -0.008199908, 0.001106390, -0.012076285\n#&gt; $ `2018-03-14` &lt;dbl&gt; -0.0084294900, -0.0017622280, 0.0009870808, 0.0002114269\n#&gt; $ `2018-03-15` &lt;dbl&gt; -0.001428887, -0.012297035, -0.002700715, -0.002123033\n#&gt; $ `2018-03-16` &lt;dbl&gt; 0.0043333233, 0.0129985324, 0.0054389622, 0.0008341013\n#&gt; $ `2018-03-19` &lt;dbl&gt; -0.010398300, -0.017670238, -0.007648673, -0.017248805\n#&gt; $ `2018-03-20` &lt;dbl&gt; 0.000171361, 0.013784848, -0.003879733, 0.004318024\n#&gt; $ `2018-03-21` &lt;dbl&gt; 0.0004388795, 0.0337207010, -0.0090580220, -0.0017923612\n#&gt; $ `2018-03-22` &lt;dbl&gt; -0.027250330, -0.021459951, -0.003464591, -0.026251915\n#&gt; $ `2018-03-23` &lt;dbl&gt; -0.019522841, -0.007163383, -0.013739589, -0.025754376\n#&gt; $ `2018-03-26` &lt;dbl&gt; 0.02449549, 0.01896047, 0.01267397, 0.03407693\n#&gt; $ `2018-03-27` &lt;dbl&gt; -0.013135617, -0.013465892, 0.007715361, -0.032635868\n#&gt; $ `2018-03-28` &lt;dbl&gt; -0.0004245702, -0.0233216532, 0.0112983042, -0.0121534871\n#&gt; $ `2018-03-29` &lt;dbl&gt; 0.013363731, 0.023735936, 0.004369175, 0.018762622\n#&gt; $ `2018-04-02` &lt;dbl&gt; -0.02238548, -0.02377674, -0.01422130, -0.02940422\n#&gt; $ `2018-04-03` &lt;dbl&gt; 0.012621133, 0.019605101, 0.007764893, 0.012355715\n#&gt; $ `2018-04-04` &lt;dbl&gt; 0.012434839, 0.001227871, 0.010279533, 0.015777681\n#&gt; $ `2018-04-05` &lt;dbl&gt; 0.007176211, 0.019447924, 0.002828578, 0.001453854\n#&gt; $ `2018-04-06` &lt;dbl&gt; -0.023302068, -0.022406930, -0.007734639, -0.029807187\n#&gt; $ `2018-04-09` &lt;dbl&gt; 0.0013397648, 0.0025547209, -0.0001039607, 0.0072958976\n#&gt; $ `2018-04-10` &lt;dbl&gt; 0.015147638, 0.038827519, -0.001881378, 0.025353351\n#&gt; $ `2018-04-11` &lt;dbl&gt; -0.0067400406, 0.0130939406, -0.0007348127, -0.0056141513\n#&gt; $ `2018-04-12` &lt;dbl&gt; 0.008179894, 0.001740217, -0.010752601, 0.015962569\n#&gt; $ `2018-04-13` &lt;dbl&gt; -0.005095188, 0.013155802, 0.005563910, -0.007832302\n#&gt; $ `2018-04-16` &lt;dbl&gt; 0.011016656, 0.008616509, 0.008682951, 0.004860507\n#&gt; $ `2018-04-17` &lt;dbl&gt; 0.006195900, 0.006042663, 0.007863409, 0.022161608\n#&gt; $ `2018-04-18` &lt;dbl&gt; 0.0032189057, 0.0206900471, -0.0046798570, 0.0002988631\n#&gt; $ `2018-04-19` &lt;dbl&gt; -0.003267487, 0.001786194, -0.013599108, -0.018124119\n#&gt; $ `2018-04-20` &lt;dbl&gt; -0.005666901, -0.003468391, -0.012187591, -0.010631547\n#&gt; $ `2018-04-23` &lt;dbl&gt; 0.002505648, 0.006591688, 0.001157400, -0.003682519\n#&gt; $ `2018-04-24` &lt;dbl&gt; -0.01123779, -0.01599992, 0.00221505, -0.01618772\n#&gt; $ `2018-04-25` &lt;dbl&gt; 0.0039772566, 0.0059983491, 0.0002285739, -0.0050286856\n#&gt; $ `2018-04-26` &lt;dbl&gt; 0.003569482, 0.011457675, 0.010261824, 0.020824552\n#&gt; $ `2018-04-27` &lt;dbl&gt; 0.003206567, -0.009243902, 0.011958287, -0.004572574\n#&gt; $ `2018-04-30` &lt;dbl&gt; -1.188822e-02, 5.650547e-05, -5.828280e-03, -4.215671e-03\n#&gt; $ `2018-05-01` &lt;dbl&gt; -0.0005850741, -0.0050385450, 0.0007776130, 0.0119120995\n#&gt; $ `2018-05-02` &lt;dbl&gt; -0.010327390, 0.008551843, -0.009884618, -0.003166279\n#&gt; $ `2018-05-03` &lt;dbl&gt; -0.005367388, -0.003354957, 0.001865179, 0.004031093\n#&gt; $ `2018-05-04` &lt;dbl&gt; 0.0118618730, 0.0002403534, 0.0115802919, 0.0152252115\n#&gt; $ `2018-05-07` &lt;dbl&gt; 0.0006844511, -0.0006381188, -0.0003423209, 0.0107081957\n#&gt; $ `2018-05-08` &lt;dbl&gt; 0.0007354292, 0.0103725962, -0.0117845845, 0.0042713777\n#&gt; $ `2018-05-09` &lt;dbl&gt; 0.006015187, 0.019005395, 0.002356665, 0.018287598\n#&gt; $ `2018-05-10` &lt;dbl&gt; 0.008198444, 0.003092002, 0.008776411, 0.012255246\n#&gt; $ `2018-05-11` &lt;dbl&gt; 0.003294055, -0.001898366, -0.001332108, -0.004284660\n#&gt; $ `2018-05-14` &lt;dbl&gt; 0.0005690565, 0.0057983409, -0.0055922557, 0.0016992322\n#&gt; $ `2018-05-15` &lt;dbl&gt; -0.003929441, 0.004290063, -0.011670012, -0.004501408\n#&gt; $ `2018-05-16` &lt;dbl&gt; 0.006577711, 0.008291791, -0.002364305, 0.008611112\n#&gt; $ `2018-05-17` &lt;dbl&gt; 0.001955032, 0.020700579, -0.004893340, -0.004584975\n#&gt; $ `2018-05-18` &lt;dbl&gt; -0.0005493316, -0.0059074763, -0.0039987220, -0.0022359815\n#&gt; $ `2018-05-21` &lt;dbl&gt; 0.005961593, 0.008283126, 0.005779365, 0.005922644\n#&gt; $ `2018-05-22` &lt;dbl&gt; -0.004840369, -0.013478278, 0.002482762, -0.003192814\n#&gt; $ `2018-05-23` &lt;dbl&gt; 0.0006489749, -0.0044105608, 0.0085556910, 0.0057628973\n#&gt; $ `2018-05-24` &lt;dbl&gt; 8.611148e-05, -1.261852e-02, 1.298424e-03, 1.489904e-03\n#&gt; $ `2018-05-25` &lt;dbl&gt; -0.0012343964, -0.0266239832, 0.0047986326, 0.0006639455\n#&gt; $ `2018-05-29` &lt;dbl&gt; -0.015959552, -0.001696881, 0.001238291, -0.006059243\n#&gt; $ `2018-05-30` &lt;dbl&gt; 0.012555582, 0.028669361, 0.011695739, 0.009546631\n#&gt; $ `2018-05-31` &lt;dbl&gt; -0.010942939, -0.012173706, -0.007053274, -0.001903148\n#&gt; $ `2018-06-01` &lt;dbl&gt; 0.010095531, 0.002155198, -0.003547776, 0.022277656\n#&gt; $ `2018-06-04` &lt;dbl&gt; 0.005981400, -0.012253263, 0.003162351, 0.003563116\n#&gt; $ `2018-06-05` &lt;dbl&gt; 0.003198089, -0.002154042, -0.005049502, 0.007483896\n#&gt; $ `2018-06-06` &lt;dbl&gt; 0.011968862, 0.003809198, -0.005781605, 0.008494834\n#&gt; $ `2018-06-07` &lt;dbl&gt; 0.001149033, 0.016374668, 0.002795166, -0.013241385\n#&gt; $ `2018-06-08` &lt;dbl&gt; 0.005784347, -0.004469895, 0.005472490, 0.004352640\n#&gt; $ `2018-06-11` &lt;dbl&gt; 0.001753974, 0.005602012, 0.001419442, 0.002487955\n#&gt; $ `2018-06-12` &lt;dbl&gt; 0.001399618, -0.005129724, 0.008011873, 0.008414511\n#&gt; $ `2018-06-13` &lt;dbl&gt; -0.0055633906, -0.0031941768, -0.0102443629, 0.0006958373\n#&gt; $ `2018-06-14` &lt;dbl&gt; 0.0009142176, -0.0051560680, 0.0089727967, 0.0095731668\n#&gt; $ `2018-06-15` &lt;dbl&gt; 0.001952892, -0.022707272, 0.005189750, -0.001900661\n#&gt; $ `2018-06-18` &lt;dbl&gt; -0.0026534461, 0.0173805699, -0.0037548361, 0.0009221515\n#&gt; $ `2018-06-19` &lt;dbl&gt; -0.0061898455, 0.0006035218, 0.0055750955, -0.0088464161\n#&gt; $ `2018-06-20` &lt;dbl&gt; 0.001076239, 0.010461839, 0.004292090, 0.006518084\n#&gt; $ `2018-06-21` &lt;dbl&gt; -0.005383937, -0.022917019, 0.003094840, -0.010378518\n#&gt; $ `2018-06-22` &lt;dbl&gt; 0.001021374, 0.024278987, 0.008221106, -0.007791614\n#&gt; $ `2018-06-25` &lt;dbl&gt; -0.011979354, -0.026779988, 0.009402708, -0.025003868\n#&gt; $ `2018-06-26` &lt;dbl&gt; -0.001118698, 0.017510326, 0.000226482, 0.003632608\n#&gt; $ `2018-06-27` &lt;dbl&gt; -0.010185976, 0.015372888, -0.001854346, -0.020827173\n#&gt; $ `2018-06-28` &lt;dbl&gt; 0.002804796, -0.003154605, 0.007254731, 0.010604506\n#&gt; $ `2018-06-29` &lt;dbl&gt; -6.855821e-05, 6.801777e-03, 6.340609e-04, 3.736572e-03\n#&gt; $ `2018-07-02` &lt;dbl&gt; 0.001471821, -0.016776871, -0.002681042, 0.007468319\n#&gt; $ `2018-07-03` &lt;dbl&gt; -0.001898671, 0.009084328, 0.004025346, -0.011619902\n#&gt; $ `2018-07-05` &lt;dbl&gt; 0.006614258, -0.001488715, 0.012383700, 0.013982441\n#&gt; $ `2018-07-06` &lt;dbl&gt; 0.006908309, 0.013008260, 0.005028909, 0.012671282\n#&gt; $ `2018-07-09` &lt;dbl&gt; 0.01402647, 0.01913839, -0.01604752, 0.00729805\n#&gt; $ `2018-07-10` &lt;dbl&gt; 0.001312620, 0.003473632, 0.006173772, 0.003275802\n#&gt; $ `2018-07-11` &lt;dbl&gt; -0.009738650, -0.024131440, 0.002633196, -0.008306789\n#&gt; $ `2018-07-12` &lt;dbl&gt; 4.563560e-03, 7.366942e-05, 7.831687e-04, 1.727150e-02\n#&gt; $ `2018-07-13` &lt;dbl&gt; 0.0012950176, 0.0050874219, 0.0004614193, -0.0023338092\n#&gt; $ `2018-07-16` &lt;dbl&gt; -0.001679823, -0.015230587, -0.004724125, -0.002482895\n#&gt; $ `2018-07-17` &lt;dbl&gt; 0.004588254, -0.001992870, -0.001728087, 0.008792052\n#&gt; $ `2018-07-18` &lt;dbl&gt; 0.005521811, 0.001663189, -0.007769495, 0.002761209\n#&gt; $ `2018-07-19` &lt;dbl&gt; -0.001518489, -0.001796304, 0.008153929, -0.004980070\n#&gt; $ `2018-07-20` &lt;dbl&gt; -0.002652620, -0.003616946, -0.005246509, -0.004154766\n#&gt; $ `2018-07-23` &lt;dbl&gt; 0.001778067, -0.003431901, -0.004892180, 0.002027684\n#&gt; $ `2018-07-24` &lt;dbl&gt; -0.0004441636, 0.0104494824, -0.0005005501, -0.0080874714\n#&gt; $ `2018-07-25` &lt;dbl&gt; 0.007192060, 0.008122618, 0.007607577, 0.016187298\n#&gt; $ `2018-07-26` &lt;dbl&gt; 0.0029787150, 0.0131985204, 0.0079688330, -0.0006751857\n#&gt; $ `2018-07-27` &lt;dbl&gt; -0.003446809, 0.001280992, -0.005027542, -0.020919476\n#&gt; $ `2018-07-30` &lt;dbl&gt; -0.003156086, 0.012986403, -0.002331982, -0.021618702\n#&gt; $ `2018-07-31` &lt;dbl&gt; 0.008038429, -0.002268616, 0.012574433, 0.002895817\n#&gt; $ `2018-08-01` &lt;dbl&gt; -0.007249964, -0.015730558, -0.002755748, -0.002711583\n#&gt; $ `2018-08-02` &lt;dbl&gt; 0.002993146, -0.002134323, 0.004132915, 0.014229673\n#&gt; $ `2018-08-03` &lt;dbl&gt; 0.0051696868, -0.0073460616, 0.0134441240, -0.0002601396\n#&gt; $ `2018-08-06` &lt;dbl&gt; 0.0014640732, 0.0052397976, 0.0002851608, 0.0082356891\n#&gt; $ `2018-08-07` &lt;dbl&gt; 0.003157818, 0.003959465, -0.003699128, 0.003361766\n#&gt; $ `2018-08-08` &lt;dbl&gt; -0.0006984346, -0.0085479395, -0.0047101273, 0.0003471306\n#&gt; $ `2018-08-09` &lt;dbl&gt; -0.0007957794, -0.0108872145, 0.0015381073, -0.0008920641\n#&gt; $ `2018-08-10` &lt;dbl&gt; -0.008728654, 0.007638768, -0.005940741, -0.009182561\n#&gt; $ `2018-08-13` &lt;dbl&gt; -0.0054871905, -0.0144547914, 0.0008234634, -0.0022671805\n#&gt; $ `2018-08-14` &lt;dbl&gt; 0.010200628, 0.004542780, 0.004398117, 0.006780214\n#&gt; $ `2018-08-15` &lt;dbl&gt; -0.006691091, -0.042438317, 0.008029299, -0.015767129\n#&gt; $ `2018-08-16` &lt;dbl&gt; 0.008967913, 0.006339482, 0.009135530, 0.004438533\n#&gt; $ `2018-08-17` &lt;dbl&gt; 0.006126832, 0.003224037, 0.007732354, -0.001760454\n#&gt; $ `2018-08-20` &lt;dbl&gt; 5.942634e-03, 8.421130e-03, 2.692069e-07, 4.049175e-03\n#&gt; $ `2018-08-21` &lt;dbl&gt; 0.005122876, 0.008349307, -0.009589298, 0.008199431\n#&gt; $ `2018-08-22` &lt;dbl&gt; -0.003894045, 0.013378383, -0.006575943, 0.006730186\n#&gt; $ `2018-08-23` &lt;dbl&gt; -0.003921203, -0.005292100, -0.001255369, 0.001981029\n#&gt; $ `2018-08-24` &lt;dbl&gt; 0.003449513, 0.008073458, 0.004500810, 0.015124691\n#&gt; $ `2018-08-27` &lt;dbl&gt; 0.007595955, 0.009180901, -0.002951911, 0.009845194\n#&gt; $ `2018-08-28` &lt;dbl&gt; 4.536910e-06, -5.525657e-03, 1.332308e-03, 3.794339e-03\n#&gt; $ `2018-08-29` &lt;dbl&gt; 0.003219045, 0.007257279, 0.002524474, 0.007306630\n#&gt; $ `2018-08-30` &lt;dbl&gt; -0.007957643, -0.002890487, -0.002927028, -0.006688627\n#&gt; $ `2018-08-31` &lt;dbl&gt; 0.0014553869, -0.0073978491, 0.0011652746, 0.0006588377\n#&gt; $ `2018-09-04` &lt;dbl&gt; -0.0012439741, -0.0073232978, -0.0024738521, -0.0009675634\n#&gt; $ `2018-09-05` &lt;dbl&gt; 0.002183078, -0.004506993, 0.010518901, -0.018543501\n#&gt; $ `2018-09-06` &lt;dbl&gt; -0.000759536, -0.019382860, 0.005232278, -0.011209654\n#&gt; $ `2018-09-07` &lt;dbl&gt; -0.001954284, -0.004880020, -0.009005451, -0.004386366\n#&gt; $ `2018-09-10` &lt;dbl&gt; 0.0029803154, 0.0006737391, 0.0056867858, 0.0087879660\n#&gt; $ `2018-09-11` &lt;dbl&gt; 0.0005049789, 0.0122762856, -0.0019538731, 0.0018295441\n#&gt; $ `2018-09-12` &lt;dbl&gt; 0.001161493, 0.009381701, 0.003579706, -0.002137449\n#&gt; $ `2018-09-13` &lt;dbl&gt; 4.018751e-03, -2.306182e-06, 4.775531e-03, 6.462456e-03\n#&gt; $ `2018-09-14` &lt;dbl&gt; 0.003053672, 0.004538664, -0.005895538, 0.001758224\n#&gt; $ `2018-09-17` &lt;dbl&gt; -0.0031778985, 0.0006103131, 0.0034210890, -0.0163136879\n#&gt; $ `2018-09-18` &lt;dbl&gt; 0.005551467, 0.011631923, -0.005822705, 0.010072334\n#&gt; $ `2018-09-19` &lt;dbl&gt; 0.004069505, 0.002892712, -0.012892316, -0.002499493\n#&gt; $ `2018-09-20` &lt;dbl&gt; 0.006322862, -0.004188770, 0.006698837, 0.012692587\n#&gt; $ `2018-09-21` &lt;dbl&gt; 0.0003726642, 0.0082752213, 0.0026245042, -0.0003286405\n#&gt; $ `2018-09-24` &lt;dbl&gt; -0.010072955, 0.013828416, -0.014558807, 0.006489045\n#&gt; $ `2018-09-25` &lt;dbl&gt; -0.0034740979, 0.0079921453, -0.0056531970, -0.0008218263\n#&gt; $ `2018-09-26` &lt;dbl&gt; -0.002645426, -0.009821787, -0.008520217, -0.002833221\n#&gt; $ `2018-09-27` &lt;dbl&gt; -0.0009807794, -0.0002961086, 0.0010554973, 0.0055217433\n#&gt; $ `2018-09-28` &lt;dbl&gt; -0.0007368244, 0.0005533699, 0.0117954826, 0.0020502699\n#&gt; $ `2018-10-01` &lt;dbl&gt; 0.001618323, 0.013778724, -0.004743913, -0.004922243\n#&gt; $ `2018-10-02` &lt;dbl&gt; -0.0021978236, -0.0008793832, 0.0063449319, -0.0096354843\n#&gt; $ `2018-10-03` &lt;dbl&gt; 0.001595167, 0.013208412, -0.010963752, 0.003528746\n#&gt; $ `2018-10-04` &lt;dbl&gt; -0.0056339596, -0.0075673719, 0.0005911404, -0.0233264347\n#&gt; $ `2018-10-05` &lt;dbl&gt; -0.005892240, -0.002222662, 0.007115132, -0.017356286\n#&gt; $ `2018-10-08` &lt;dbl&gt; 0.002315831, -0.004422415, 0.011777449, -0.016146227\n#&gt; $ `2018-10-09` &lt;dbl&gt; -0.008888514, 0.011660485, 0.001382168, -0.002245737\n#&gt; $ `2018-10-10` &lt;dbl&gt; -0.02905836, -0.04102685, -0.01068745, -0.04697040\n#&gt; $ `2018-10-11` &lt;dbl&gt; -0.02220585, -0.03066850, -0.02451301, -0.01005558\n#&gt; $ `2018-10-12` &lt;dbl&gt; 0.0079626327, 0.0059181717, 0.0009265891, 0.0285292180\n#&gt; $ `2018-10-15` &lt;dbl&gt; 0.0003925018, -0.0069465232, 0.0063396100, -0.0109009681\n#&gt; $ `2018-10-16` &lt;dbl&gt; 0.01900308, 0.01198762, 0.01495123, 0.03496553\n#&gt; $ `2018-10-17` &lt;dbl&gt; -0.0022031050, -0.0121314041, -0.0014392965, -0.0001182299\n#&gt; $ `2018-10-18` &lt;dbl&gt; -0.0143254165, -0.0110406026, 0.0003157027, -0.0250782664\n#&gt; $ `2018-10-19` &lt;dbl&gt; -0.004171677, -0.013063143, 0.014528266, -0.012541599\n#&gt; $ `2018-10-22` &lt;dbl&gt; -0.006903643, -0.010377735, -0.009878428, 0.003844884\n#&gt; $ `2018-10-23` &lt;dbl&gt; -0.006763992, -0.029278040, 0.002693487, -0.003859615\n#&gt; $ `2018-10-24` &lt;dbl&gt; -0.03132646, -0.04585749, 0.01353611, -0.05208563\n#&gt; $ `2018-10-25` &lt;dbl&gt; 0.015441294, 0.015249528, -0.003340079, 0.028991360\n#&gt; $ `2018-10-26` &lt;dbl&gt; -0.012819263, -0.009554609, -0.020372884, -0.023718562\n#&gt; $ `2018-10-29` &lt;dbl&gt; 0.001596918, -0.024947273, 0.014181789, -0.018802822\n#&gt; $ `2018-10-30` &lt;dbl&gt; 0.01998755, 0.02341653, 0.01125114, 0.03454404\n#&gt; $ `2018-10-31` &lt;dbl&gt; 0.008027797, 0.006087733, -0.011297427, 0.021504480\n#&gt; $ `2018-11-01` &lt;dbl&gt; 0.015634660, 0.010308997, 0.003747117, 0.032081398\n#&gt; $ `2018-11-02` &lt;dbl&gt; -0.001293155, -0.009730453, -0.009108626, -0.003883827\n#&gt; $ `2018-11-05` &lt;dbl&gt; 0.006938079, 0.018923407, 0.013772235, -0.005924196\n#&gt; $ `2018-11-06` &lt;dbl&gt; 0.007426739, 0.002004953, 0.008152953, 0.005474840\n#&gt; $ `2018-11-07` &lt;dbl&gt; 0.014704492, 0.022724471, 0.008792495, 0.027114895\n#&gt; $ `2018-11-08` &lt;dbl&gt; 0.0004365969, -0.0277091571, 0.0004581358, -0.0034784146\n#&gt; $ `2018-11-09` &lt;dbl&gt; -0.008675371, -0.004971914, 0.005367340, -0.024619687\n#&gt; $ `2018-11-12` &lt;dbl&gt; -0.015211256, -0.029063167, 0.001904854, -0.033687808\n#&gt; $ `2018-11-13` &lt;dbl&gt; 0.0008174817, -0.0251968257, 0.0001916946, 0.0041571717\n#&gt; $ `2018-11-14` &lt;dbl&gt; -0.007268626, 0.003142088, -0.004133400, -0.005272713\n#&gt; $ `2018-11-15` &lt;dbl&gt; 0.008872325, 0.020515330, -0.004406745, 0.023355178\n#&gt; $ `2018-11-16` &lt;dbl&gt; 0.002216731, 0.007680349, 0.010063612, -0.005298491\n#&gt; $ `2018-11-19` &lt;dbl&gt; -0.012261967, -0.006087903, 0.001588685, -0.044615610\n#&gt; $ `2018-11-20` &lt;dbl&gt; -0.018868549, -0.040522927, -0.008086658, -0.007829112\n#&gt; $ `2018-11-21` &lt;dbl&gt; 0.007797251, 0.018658251, -0.006933761, 0.012297653\n#&gt; $ `2018-11-23` &lt;dbl&gt; -1.868033e-03, -3.653804e-02, -7.387090e-06, -2.928696e-03\n#&gt; $ `2018-11-26` &lt;dbl&gt; 0.01391096, 0.02157185, 0.00222745, 0.02792190\n#&gt; $ `2018-11-27` &lt;dbl&gt; -0.001218930, -0.006230058, 0.005847793, 0.000669214\n#&gt; $ `2018-11-28` &lt;dbl&gt; 0.020257793, 0.016374453, 0.002822177, 0.032255508\n#&gt; $ `2018-11-29` &lt;dbl&gt; -0.0037995937, 0.0053696702, 0.0002154275, -0.0073804570\n#&gt; $ `2018-11-30` &lt;dbl&gt; 0.005229962, -0.006236157, 0.011292338, 0.008241973\n#&gt; $ `2018-12-03` &lt;dbl&gt; 0.008915859, 0.026350978, 0.003797532, 0.021707438\n#&gt; $ `2018-12-04` &lt;dbl&gt; -0.034976107, -0.035131989, -0.008022436, -0.044736643\n#&gt; $ `2018-12-06` &lt;dbl&gt; -0.006218295, -0.025829610, 0.009630455, 0.008023883\n#&gt; $ `2018-12-07` &lt;dbl&gt; -0.023407900, -0.007277311, -0.007000921, -0.037844459\n#&gt; $ `2018-12-10` &lt;dbl&gt; -0.003215619, -0.022566657, -0.000701633, 0.009075633\n#&gt; $ `2018-12-11` &lt;dbl&gt; -0.003893997, -0.003490909, 0.004753714, 0.001617522\n#&gt; $ `2018-12-12` &lt;dbl&gt; 0.00769762, 0.01204804, -0.00950557, 0.01094937\n#&gt; $ `2018-12-13` &lt;dbl&gt; -0.008218803, -0.002388297, 0.008867633, -0.009546741\n#&gt; $ `2018-12-14` &lt;dbl&gt; -0.014658242, -0.028984553, -0.006215472, -0.020016222\n#&gt; $ `2018-12-17` &lt;dbl&gt; -0.01759075, -0.01903142, -0.03181874, -0.02540093\n#&gt; $ `2018-12-18` &lt;dbl&gt; -0.001704006, -0.022103904, -0.002335696, 0.010933420\n#&gt; $ `2018-12-19` &lt;dbl&gt; -0.015390412, -0.013217782, -0.005963248, -0.029032982\n#&gt; $ `2018-12-20` &lt;dbl&gt; -0.016571956, -0.028551975, -0.009304501, -0.017370866\n#&gt; $ `2018-12-21` &lt;dbl&gt; -0.01838267, -0.01564321, -0.01104888, -0.03004544\n#&gt; $ `2018-12-24` &lt;dbl&gt; -0.02226213, -0.04288499, -0.03925786, -0.02366252\n#&gt; $ `2018-12-26` &lt;dbl&gt; 0.04534322, 0.07139516, 0.02519597, 0.06254006\n#&gt; $ `2018-12-27` &lt;dbl&gt; 0.008903106, 0.003921202, 0.005720476, 0.010954290\n#&gt; $ `2018-12-28` &lt;dbl&gt; -0.0019643956, -0.0097765403, 0.0005493469, -0.0021091840\n#&gt; $ `2018-12-31` &lt;dbl&gt; 0.009390790, 0.006628301, 0.003374524, 0.008540171\n#&gt; $ `2019-01-02` &lt;dbl&gt; 0.002999051, 0.019069103, -0.017623973, 0.003843006\n#&gt; $ `2019-01-03` &lt;dbl&gt; -0.020498572, -0.007154041, 0.003428785, -0.042207626\n#&gt; $ `2019-01-04` &lt;dbl&gt; 0.03395158, 0.04511775, 0.01352601, 0.04949310\n#&gt; $ `2019-01-07` &lt;dbl&gt; 0.009397651, 0.020515467, 0.002960760, 0.021900070\n#&gt; $ `2019-01-08` &lt;dbl&gt; 0.009803304, 0.011879849, 0.014579573, 0.011169862\n#&gt; $ `2019-01-09` &lt;dbl&gt; 0.006131962, 0.021232497, -0.004437992, 0.017527869\n#&gt; $ `2019-01-10` &lt;dbl&gt; 0.004161268, 0.007079545, 0.014320030, 0.006892676\n#&gt; $ `2019-01-11` &lt;dbl&gt; 0.0019697839, -0.0044939986, 0.0006439650, -0.0000643815\n#&gt; $ `2019-01-14` &lt;dbl&gt; -2.211265e-03, -5.779135e-05, -7.487770e-03, -1.263161e-02\n#&gt; $ `2019-01-15` &lt;dbl&gt; 0.004755527, 0.004220701, 0.011233657, 0.016148265\n#&gt; $ `2019-01-16` &lt;dbl&gt; 0.0034638122, 0.0005469789, 0.0018849468, -0.0003493891\n#&gt; $ `2019-01-17` &lt;dbl&gt; 0.009621661, 0.013001543, 0.005550432, 0.009778713\n#&gt; $ `2019-01-18` &lt;dbl&gt; 0.016372572, 0.020885746, 0.005066536, 0.018933426\n#&gt; $ `2019-01-22` &lt;dbl&gt; -0.013525856, -0.026342440, -0.003042516, -0.022274543\n#&gt; $ `2019-01-23` &lt;dbl&gt; 0.0008376363, -0.0139855530, 0.0054318391, -0.0051502604\n#&gt; $ `2019-01-24` &lt;dbl&gt; 0.002910626, 0.002068247, -0.002902421, 0.025276525\n#&gt; $ `2019-01-25` &lt;dbl&gt; 0.0104049820, 0.0200460247, -0.0007662691, 0.0213786649\n#&gt; $ `2019-01-28` &lt;dbl&gt; -0.003409732, -0.015255646, 0.003788257, -0.011670435\n#&gt; $ `2019-01-29` &lt;dbl&gt; 0.003457064, 0.006852493, 0.004292367, -0.013352553\n#&gt; $ `2019-01-30` &lt;dbl&gt; 0.007812059, 0.020060173, 0.007180800, 0.025220812\n#&gt; $ `2019-01-31` &lt;dbl&gt; 0.0051356841, -0.0004307433, 0.0144310699, 0.0100370290\n#&gt; $ `2019-02-01` &lt;dbl&gt; 0.002655385, 0.008515918, -0.004675601, 0.008579466\n#&gt; $ `2019-02-04` &lt;dbl&gt; 0.004837957, 0.006715036, 0.004866655, 0.006612912\n#&gt; $ `2019-02-05` &lt;dbl&gt; 0.004876282, -0.001705462, 0.001337625, 0.007444096\n#&gt; $ `2019-02-06` &lt;dbl&gt; -0.0007242068, -0.0072253794, -0.0032362265, 0.0011515879\n#&gt; $ `2019-02-07` &lt;dbl&gt; -0.005505920, -0.032870943, 0.005879985, -0.016007614\n#&gt; $ `2019-02-08` &lt;dbl&gt; 0.0003808557, -0.0073106553, 0.0041796637, 0.0108905276\n#&gt; $ `2019-02-11` &lt;dbl&gt; 0.002443940, 0.009675432, 0.001155150, 0.002164051\n#&gt; $ `2019-02-12` &lt;dbl&gt; 0.0144575364, 0.0109777684, -0.0007469276, 0.0187379927\n#&gt; $ `2019-02-13` &lt;dbl&gt; 0.003986743, 0.018636127, 0.001301848, 0.002882583\n#&gt; $ `2019-02-14` &lt;dbl&gt; -0.0036341950, 0.0069304497, -0.0018576514, 0.0008287979\n#&gt; $ `2019-02-15` &lt;dbl&gt; 0.013290681, 0.016988955, 0.006505341, 0.003344893\n#&gt; $ size         &lt;int&gt; 317, 30, 84, 71\n#&gt; $ withinss     &lt;dbl&gt; 18.051976, 1.588895, 2.554867, 7.009809\n#&gt; $ cluster      &lt;fct&gt; 1, 2, 3, 4\n\nbroom::glance(kmeans_obj_challenge)\n\n\n\n  \n\n\n\nAugment\n\n# Add the clusters to the data\nbroom::augment(kmeans_obj_challenge, stock_date_matrix_tbl) %&gt;%\n    select(symbol, .cluster)\n\n\n\n  \n\n\n\nMap Clusters\n\nkmeans_mapper &lt;- function(centers = 4) {\n    \n    stock_date_matrix_tbl %&gt;%\n        select(-symbol) %&gt;%\n        kmeans(centers = centers, nstart = 100)\n}\n\n4 %&gt;% kmeans_mapper() %&gt;% glance()\n\n\n\n  \n\n\n\nMap function to many elements\n\n# Mapping the function to many elements\nkmeans_mapped_tbl_challenge &lt;- tibble(centers = 1:30) %&gt;%\n    mutate(k_means = centers %&gt;% map(kmeans_mapper)) %&gt;%\n    mutate(glance  = k_means %&gt;% map(glance))\n\n#&gt; Warning: There was 1 warning in `mutate()`.\n#&gt; ℹ In argument: `k_means = centers %&gt;% map(kmeans_mapper)`.\n#&gt; Caused by warning:\n#&gt; ! keine Konvergenz nach 10 Schritten\n\n\ntot.wihinss\n\nkmeans_mapped_tbl_challenge %&gt;%\n    unnest(glance) %&gt;%\n    select(centers, tot.withinss)\n\n\n\n  \n\n\n\nSkree PLot\n\n#Skree Plot ----\n\nkmeans_mapped_tbl_challenge %&gt;%\n    unnest(glance) %&gt;%\n    select(centers, tot.withinss) %&gt;%\n    \n    # Visualization\n    ggplot(aes(centers, tot.withinss)) +\n    geom_point(color = \"#2DC6D6\", size = 4) +\n    geom_line(color = \"#2DC6D6\", size = 1) +\n    # Add labels (which are repelled a little)\n    ggrepel::geom_label_repel(aes(label = centers), color = \"#2DC6D6\") + \n    \n    # Formatting\n    labs(title = \"Skree Plot\",\n    subtitle = \"Measures the distance each of the customer are from the closes K-Means center\",\n    caption = \"Conclusion: Based on the Scree Plot, we select 4 clusters to segment the customer base.\")\n\n#&gt; Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#&gt; ℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh.\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "2.1 Header 2",
    "text": "2.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/02_ml_regression.html",
    "href": "content/01_journal/02_ml_regression.html",
    "title": "Supervised Learning Machien Learning Rgression",
    "section": "",
    "text": "1 Challenge\nI. Build a model\n\nCreate features with the recipes package\nBundle the model and recipe with the workflow package\nEvaluate your model with the yardstick package\n\n\n\n2 Libraries\n\nlibrary(xgboost)\n\n#&gt; Warning: Paket 'xgboost' wurde unter R Version 4.2.3 erstellt\n\nlibrary(yardstick)\n\n#&gt; Warning: Paket 'yardstick' wurde unter R Version 4.2.3 erstellt\n\nlibrary(tidymodels)  # for the parsnip package, along with the rest of tidymodels\n\n#&gt; Warning: Paket 'tidymodels' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Attaching packages ────────────────────────────────────── tidymodels 1.1.0 ──\n\n\n#&gt; ✔ broom        1.0.5     ✔ recipes      1.0.6\n#&gt; ✔ dials        1.2.0     ✔ rsample      1.1.1\n#&gt; ✔ dplyr        1.1.2     ✔ tibble       3.2.1\n#&gt; ✔ ggplot2      3.4.2     ✔ tidyr        1.3.0\n#&gt; ✔ infer        1.0.4     ✔ tune         1.1.1\n#&gt; ✔ modeldata    1.1.0     ✔ workflows    1.1.3\n#&gt; ✔ parsnip      1.1.0     ✔ workflowsets 1.0.1\n#&gt; ✔ purrr        1.0.1\n\n\n#&gt; Warning: Paket 'dials' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'dplyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'ggplot2' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'infer' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'modeldata' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'parsnip' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'purrr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'recipes' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'rsample' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tibble' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tidyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tune' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'workflows' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'workflowsets' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n#&gt; ✖ purrr::discard() masks scales::discard()\n#&gt; ✖ dplyr::filter()  masks stats::filter()\n#&gt; ✖ dplyr::lag()     masks stats::lag()\n#&gt; ✖ dplyr::slice()   masks xgboost::slice()\n#&gt; ✖ recipes::step()  masks stats::step()\n#&gt; • Learn how to get started at https://www.tidymodels.org/start/\n\nlibrary(modelr)\n\n#&gt; Warning: Paket 'modelr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; \n#&gt; Attache Paket: 'modelr'\n\n\n#&gt; Das folgende Objekt ist maskiert 'package:broom':\n#&gt; \n#&gt;     bootstrap\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:yardstick':\n#&gt; \n#&gt;     mae, mape, rmse\n\n# Helper packages\nlibrary(broom.mixed) # for converting bayesian models to tidy tibbles\n\n#&gt; Warning: Paket 'broom.mixed' wurde unter R Version 4.2.3 erstellt\n\n# Standard\nlibrary(tidyverse)\n\n#&gt; Warning: Paket 'tidyverse' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'readr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'stringr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'forcats' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'lubridate' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ forcats   1.0.0     ✔ readr     2.1.4\n#&gt; ✔ lubridate 1.9.2     ✔ stringr   1.5.0\n\n\n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ modelr::bootstrap() masks broom::bootstrap()\n#&gt; ✖ readr::col_factor() masks scales::col_factor()\n#&gt; ✖ purrr::discard()    masks scales::discard()\n#&gt; ✖ dplyr::filter()     masks stats::filter()\n#&gt; ✖ stringr::fixed()    masks recipes::fixed()\n#&gt; ✖ dplyr::lag()        masks stats::lag()\n#&gt; ✖ modelr::mae()       masks yardstick::mae()\n#&gt; ✖ modelr::mape()      masks yardstick::mape()\n#&gt; ✖ modelr::rmse()      masks yardstick::rmse()\n#&gt; ✖ dplyr::slice()      masks xgboost::slice()\n#&gt; ✖ readr::spec()       masks yardstick::spec()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\n\n# Modeling\nlibrary(parsnip)\n\n# Preprocessing & Sampling\nlibrary(recipes)\nlibrary(rsample)\n\n# Modeling Error Metrics\nlibrary(yardstick)\n\n# Plotting Decision Trees\nlibrary(rpart.plot)\n\n#&gt; Warning: Paket 'rpart.plot' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Lade nötiges Paket: rpart\n#&gt; \n#&gt; Attache Paket: 'rpart'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:dials':\n#&gt; \n#&gt;     prune\n\n# For splitting the dataset\nlibrary(caret)\n\n#&gt; Warning: Paket 'caret' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Lade nötiges Paket: lattice\n#&gt; \n#&gt; Attache Paket: 'caret'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:purrr':\n#&gt; \n#&gt;     lift\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:yardstick':\n#&gt; \n#&gt;     precision, recall, sensitivity, specificity\n\n\n\n\n3 Data from business case\n\nbike_orderlines_tbl = readRDS(\"datas/bike_orderlines.rds\")\nglimpse(bike_orderlines_tbl)\n\n#&gt; Rows: 15,644\n#&gt; Columns: 18\n#&gt; $ order_id       &lt;dbl&gt; 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7…\n#&gt; $ order_line     &lt;dbl&gt; 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1…\n#&gt; $ order_date     &lt;dttm&gt; 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-0…\n#&gt; $ model          &lt;chr&gt; \"Spectral CF 7 WMN\", \"Ultimate CF SLX Disc 8.0 ETAP\", \"…\n#&gt; $ model_year     &lt;dbl&gt; 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n#&gt; $ category_1     &lt;chr&gt; \"Mountain\", \"Road\", \"Mountain\", \"Road\", \"Mountain\", \"Hy…\n#&gt; $ category_2     &lt;chr&gt; \"Trail\", \"Race\", \"Trail\", \"Triathlon Bike\", \"Dirt Jump\"…\n#&gt; $ category_3     &lt;chr&gt; \"Spectral\", \"Ultimate\", \"Neuron\", \"Speedmax\", \"Stitched…\n#&gt; $ price          &lt;dbl&gt; 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n#&gt; $ quantity       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ total_price    &lt;dbl&gt; 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n#&gt; $ frame_material &lt;chr&gt; \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"aluminium\", \"c…\n#&gt; $ weight         &lt;dbl&gt; 13.80, 7.44, 14.06, 8.80, 11.50, 8.80, 8.20, 8.85, 14.4…\n#&gt; $ url            &lt;chr&gt; \"https://www.canyon.com/en-de/mountain-bikes/trail-bike…\n#&gt; $ bikeshop       &lt;chr&gt; \"AlexandeRad\", \"AlexandeRad\", \"WITT-RAD\", \"WITT-RAD\", \"…\n#&gt; $ location       &lt;chr&gt; \"Hamburg, Hamburg\", \"Hamburg, Hamburg\", \"Bremen, Bremen…\n#&gt; $ lat            &lt;dbl&gt; 53.57532, 53.57532, 53.07379, 53.07379, 48.78234, 48.78…\n#&gt; $ lng            &lt;dbl&gt; 10.015340, 10.015340, 8.826754, 8.826754, 9.180819, 9.1…\n\nmodel_sales_tbl &lt;- bike_orderlines_tbl %&gt;%\n    select(total_price, model, category_2, frame_material) %&gt;%\n    \n    group_by(model, category_2, frame_material) %&gt;%\n    summarise(total_sales = sum(total_price)) %&gt;%\n    ungroup() %&gt;%\n    \n    arrange(desc(total_sales))\n\n#&gt; `summarise()` has grouped output by 'model', 'category_2'. You can override\n#&gt; using the `.groups` argument.\n\n\n\nbike_features_tbl &lt;- readRDS(\"datas/bike_features_tbl.rds\")\nglimpse(bike_features_tbl)\n\n#&gt; Rows: 231\n#&gt; Columns: 67\n#&gt; $ bike_id                     &lt;dbl&gt; 2875, 2873, 2874, 2876, 2877, 2225, 2091, …\n#&gt; $ model                       &lt;chr&gt; \"Aeroad CF SL Disc 8.0 Di2\", \"Aeroad CF SL…\n#&gt; $ model_year                  &lt;dbl&gt; 2020, 2020, 2020, 2020, 2020, 2019, 2019, …\n#&gt; $ frame_material              &lt;chr&gt; \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"c…\n#&gt; $ weight                      &lt;dbl&gt; 7.60, 7.27, 7.10, 7.73, 7.83, 6.80, 6.80, …\n#&gt; $ price                       &lt;dbl&gt; 4579, 6919, 6429, 5069, 3609, 6139, 5359, …\n#&gt; $ category_1                  &lt;chr&gt; \"Road\", \"Road\", \"Road\", \"Road\", \"Road\", \"R…\n#&gt; $ category_2                  &lt;chr&gt; \"Race\", \"Race\", \"Race\", \"Race\", \"Race\", \"R…\n#&gt; $ category_3                  &lt;chr&gt; \"Aeroad\", \"Aeroad\", \"Aeroad\", \"Aeroad\", \"A…\n#&gt; $ gender                      &lt;chr&gt; \"unisex\", \"unisex\", \"unisex\", \"unisex\", \"u…\n#&gt; $ url                         &lt;chr&gt; \"https://www.canyon.com/en-de/road-bikes/r…\n#&gt; $ Frame                       &lt;chr&gt; \"Canyon Aeroad CF SL Disc\", \"Canyon Aeroad…\n#&gt; $ Fork                        &lt;chr&gt; \"Canyon FK0041 CF SLX Disc\", \"Canyon FK004…\n#&gt; $ `Rear Derailleur`           &lt;chr&gt; \"Shimano Ultegra Di2 R8050 SS\", \"SRAM RED …\n#&gt; $ `Front Derailleur`          &lt;chr&gt; \"Shimano Ultegra Di2 R8050\", \"SRAM RED eTa…\n#&gt; $ Cassette                    &lt;chr&gt; \"Shimano Ultegra R8000, 11-speed, 11-28T\",…\n#&gt; $ Crank                       &lt;chr&gt; \"Shimano Ultegra R8000\", \"SRAM RED D1\", \"S…\n#&gt; $ `Bottom bracket`            &lt;chr&gt; \"Shimano Pressfit BB72\", \"SRAM Pressfit RE…\n#&gt; $ `Thru Axle`                 &lt;chr&gt; \"Canyon Thru Axle\", \"Canyon Thru Axle\", \"C…\n#&gt; $ Cockpit                     &lt;chr&gt; \"Canyon H36 Aerocockpit CF\", \"Canyon H36 A…\n#&gt; $ Saddle                      &lt;chr&gt; \"Selle Italia SLR\", \"Selle Italia SLR\", \"S…\n#&gt; $ Seatpost                    &lt;chr&gt; \"Canyon S27 Aero VCLS CF\", \"Canyon S27 Aer…\n#&gt; $ Pedals                      &lt;chr&gt; \"None included\", \"None included\", \"None in…\n#&gt; $ `Derailleur hanger`         &lt;chr&gt; \"Shop Derailleur Hanger GP0211-01\", \"Shop …\n#&gt; $ Battery                     &lt;chr&gt; \"\", \"SRAM eTap Powerpack\", \"\", \"SRAM eTap …\n#&gt; $ Brake                       &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Shift Lever`               &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"Shimano Di2 Remot…\n#&gt; $ Chain                       &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"Shimano CN-HG901 …\n#&gt; $ Stem                        &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Canyon V13\", …\n#&gt; $ Handlebar                   &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Canyon H16 Ae…\n#&gt; $ Headset                     &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Motor                       &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Battery Charger`           &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Flat Pedals`               &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Chainguard                  &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Aero Bar`                  &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Brake Lever / Master`      &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Wheel Tire System`         &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Suspension Fork`           &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Disc Brake`                &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Grips                       &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Chainring                   &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Display                     &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Modeswitch                  &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Rear Shock`                &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Light                       &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ Fender                      &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Bike Racks`                &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Brake 1`                   &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"SRAM S-900 Direct Mou…\n#&gt; $ `Brake 2`                   &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"SRAM S-900 Direct Mou…\n#&gt; $ `Shift-/ Brake Lever 1`     &lt;chr&gt; \"Shimano Ultegra Di2 R8070, 11-speed\", \"SR…\n#&gt; $ `Shift-/ Brake Lever 2`     &lt;chr&gt; \"Shimano Ultegra Di2 R8070, 11-speed\", \"SR…\n#&gt; $ `Wheel 1`                   &lt;chr&gt; \"DT Swiss ARC 1400 Dicut\", \"DT Swiss ARC 1…\n#&gt; $ `Wheel 2`                   &lt;chr&gt; \"DT Swiss ARC 1400 Dicut\", \"DT Swiss ARC 1…\n#&gt; $ `Tyre 1`                    &lt;chr&gt; \"Continental Grand Prix 5000 / Attack  23 …\n#&gt; $ `Tyre 2`                    &lt;chr&gt; \"Continental Grand Prix 5000, 25 mm\", \"Con…\n#&gt; $ `Handlebar Tape 1`          &lt;chr&gt; \"Canyon Ergospeed Gel\", \"Canyon Ergospeed …\n#&gt; $ `Handlebar Tape 2`          &lt;chr&gt; \"Canyon bar-end plug\", \"Canyon bar-end plu…\n#&gt; $ `Manuals and Accessories 1` &lt;chr&gt; \"Canyon tool case\", \"Canyon tool case\", \"C…\n#&gt; $ `Manuals and Accessories 2` &lt;chr&gt; \"DT Swiss warranty & intended use manual\",…\n#&gt; $ `Manuals and Accessories 3` &lt;chr&gt; \"Canyon starter box\", \"Canyon starter box\"…\n#&gt; $ `Manuals and Accessories 4` &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"BAG R…\n#&gt; $ `Manuals and Accessories 5` &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Manuals and Accessories 6` &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Manuals and Accessories 7` &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Manuals and Accessories 8` &lt;chr&gt; \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"…\n#&gt; $ `Brake Rotor`               &lt;list&gt; \"Shimano RT800\", \"SRAM Centerline X\", \"Sh…\n\nbike_features_tbl &lt;- bike_features_tbl %&gt;% \n    select(model:url, `Rear Derailleur`, `Shift Lever`) %&gt;% \n    mutate(\n      `shimano dura-ace`        = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano dura-ace \") %&gt;% as.numeric(),\n      `shimano ultegra`         = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano ultegra \") %&gt;% as.numeric(),\n      `shimano 105`             = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano 105 \") %&gt;% as.numeric(),\n      `shimano tiagra`          = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano tiagra \") %&gt;% as.numeric(),\n      `Shimano sora`            = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano sora\") %&gt;% as.numeric(),\n      `shimano deore`           = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano deore(?! xt)\") %&gt;% as.numeric(),\n      `shimano slx`             = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano slx\") %&gt;% as.numeric(),\n      `shimano grx`             = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano grx\") %&gt;% as.numeric(),\n      `Shimano xt`              = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano deore xt |shimano xt \") %&gt;% as.numeric(),\n      `Shimano xtr`             = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano xtr\") %&gt;% as.numeric(),\n      `Shimano saint`           = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"shimano saint\") %&gt;% as.numeric(),\n      `SRAM red`                = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram red\") %&gt;% as.numeric(),\n      `SRAM force`              = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram force\") %&gt;% as.numeric(),\n      `SRAM rival`              = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram rival\") %&gt;% as.numeric(),\n      `SRAM apex`               = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram apex\") %&gt;% as.numeric(),\n      `SRAM xx1`                = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram xx1\") %&gt;% as.numeric(),\n      `SRAM x01`                = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram x01|sram xo1\") %&gt;% as.numeric(),\n      `SRAM gx`                 = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram gx\") %&gt;% as.numeric(),\n      `SRAM nx`                 = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram nx\") %&gt;% as.numeric(),\n      `SRAM sx`                 = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram sx\") %&gt;% as.numeric(),\n      `SRAM sx`                 = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"sram sx\") %&gt;% as.numeric(),\n      `Campagnolo potenza`      = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"campagnolo potenza\") %&gt;% as.numeric(),\n      `Campagnolo super record` = `Rear Derailleur` %&gt;% str_to_lower() %&gt;% str_detect(\"campagnolo super record\") %&gt;% as.numeric(),\n      `shimano nexus`           = `Shift Lever`     %&gt;% str_to_lower() %&gt;% str_detect(\"shimano nexus\") %&gt;% as.numeric(),\n      `shimano alfine`          = `Shift Lever`     %&gt;% str_to_lower() %&gt;% str_detect(\"shimano alfine\") %&gt;% as.numeric()\n    ) %&gt;% \n  # Remove original columns  \n  select(-c(`Rear Derailleur`, `Shift Lever`)) %&gt;% \n  # Set all NAs to 0\n  mutate_if(is.numeric, ~replace(., is.na(.), 0))\n\n\nbike_features_tbl &lt;- bike_features_tbl %&gt;% \n  \n  mutate(id = row_number()) %&gt;% \n  \n  select(id, everything(), -url)\n\nbike_features_tbl \n\n\n\n  \n\n\n\n\n\n4 0.1 Splitting datasets into 80% training, 20% testing\n\nBecause using rsample::initial_split() will not split the dataset equally (missing variables)\nAnother method is used\n\n\n# Get all unique values of category_2\nall_categories &lt;- unique(bike_features_tbl$category_2)\n\n# Split the data into train and test sets\nset.seed(1234)\ntrain_indices &lt;- createDataPartition(bike_features_tbl$category_2, p = 0.8, list = FALSE)\n\n#&gt; Warning in createDataPartition(bike_features_tbl$category_2, p = 0.8, list =\n#&gt; FALSE): Some classes have a single record ( E-Road ) and these will be selected\n#&gt; for the sample\n\ntrain_tbl &lt;- bike_features_tbl[train_indices, ]\ntest_indices &lt;- createDataPartition(bike_features_tbl$category_2, p = 0.2, list = FALSE)\n\n#&gt; Warning in createDataPartition(bike_features_tbl$category_2, p = 0.2, list =\n#&gt; FALSE): Some classes have a single record ( E-Road ) and these will be selected\n#&gt; for the sample\n\ntest_tbl &lt;- bike_features_tbl[test_indices, ]\n\n# Check if train and test sets have all categories\nmissing_categories &lt;- setdiff(all_categories, unique(train_tbl$category_2))\nif (length(missing_categories) &gt; 0) {\n  cat(\"Missing categories train_tbl:\", missing_categories, \"\\n\")\n}\nmissing_categories &lt;- setdiff(all_categories, unique(test_tbl$category_2))\nif (length(missing_categories) &gt; 0) {\n  cat(\"Missing categoriestest_tbl:\", missing_categories, \"\\n\")\n}\n\n# Check if testing contains all category_2 values\ntrain_tbl %&gt;% distinct(category_2)\n\n\n\n  \n\n\ntest_tbl %&gt;% distinct(category_2)\n\n\n\n  \n\n\n\n\n\n5 0.2 check splitted dataset\n\ntrain_tbl\n\n\n\n  \n\n\ntest_tbl\n\n\n\n  \n\n\n\n\n\n6 0.3 Metrics calculation function\n\ncalc_metrics &lt;- function(model, new_data = test_tbl) {\n\n    model %&gt;%\n        predict(new_data = new_data) %&gt;%\n\n        bind_cols(new_data %&gt;% select(price)) %&gt;%\n        yardstick::metrics(truth = price, estimate = .pred)\n\n}\n\n\n\n7 1 Build model\n\nmodel_boost_tree_xgboost &lt;- boost_tree(\n    mode = \"regression\",\n    mtry = 30,\n    learn_rate = 0.25,\n    tree_depth = 7\n    ) %&gt;%\n    set_engine(\"xgboost\") %&gt;%\n    fit(price ~ ., data = train_tbl %&gt;% select(-c(id:weight), -category_1, -c(category_3:gender)))\n\nmodel_boost_tree_xgboost %&gt;% calc_metrics(test_tbl)\n\n\n\n  \n\n\n\n\nmodel_boost_tree_xgboost &lt;- boost_tree(\n    mode = \"regression\",\n    mtry = 30,\n    learn_rate = 0.25,\n    tree_depth = 7\n    ) %&gt;%\n    set_engine(\"xgboost\")\n\n\n\n8 2 create features with recipe()\n\nrecipe_obj &lt;- recipe(price ~ ., data = train_tbl) %&gt;% \n                     step_rm(id:weight, category_1, category_3:gender)%&gt;%\n                     step_dummy(all_nominal(), -all_outcomes(), one_hot = T) %&gt;%\n                     prep(training = train_tbl)\n\nPreprocessing using bake()\n\ntrain_transformed_tbl &lt;- bake(recipe_obj, new_data = train_tbl)\ntest_transformed_tbl  &lt;- bake(recipe_obj, new_data = test_tbl)\n\n\n\n9 3 Bundel model with recipe and workfolw\n\nbundel_model_wflow &lt;- \n  workflow() %&gt;% \n  add_model(model_boost_tree_xgboost) %&gt;% \n  add_recipe(recipe_obj)\n\nbundel_model_wflow\n\n#&gt; ══ Workflow ════════════════════════════════════════════════════════════════════\n#&gt; Preprocessor: Recipe\n#&gt; Model: boost_tree()\n#&gt; \n#&gt; ── Preprocessor ────────────────────────────────────────────────────────────────\n#&gt; 2 Recipe Steps\n#&gt; \n#&gt; • step_rm()\n#&gt; • step_dummy()\n#&gt; \n#&gt; ── Model ───────────────────────────────────────────────────────────────────────\n#&gt; Boosted Tree Model Specification (regression)\n#&gt; \n#&gt; Main Arguments:\n#&gt;   mtry = 30\n#&gt;   tree_depth = 7\n#&gt;   learn_rate = 0.25\n#&gt; \n#&gt; Computational engine: xgboost\n\n\nFit model\n\nfitted_model &lt;- bundel_model_wflow %&gt;% fit(data = train_tbl)\n\nPredict using made model\n\npredict(fitted_model, test_tbl)\n\n\n\n  \n\n\n\n\n\n10 4 Evaluate model with yardstick\n\nfitted_model %&gt;%\n    predict(new_data = test_tbl) %&gt;%\n\n    bind_cols(test_tbl %&gt;% select(price)) %&gt;%\n    yardstick::metrics(truth = price, estimate = .pred)"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html",
    "href": "content/01_journal/03_ml_h2o_1.html",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "Use descriptive features and plot_ggpairs() to further investigate the features\n\n\n\n\n\n\n\nNote\n\n\n\nSince the plots are from the business case, rerunning the code would be pointless. So instead only the questions and the answers are given here\n\n\n\n\nWhat can you deduce about the interaction between Monthly Income and Attrition?\nANSWER: C. Those that are leaving have a lower Monthly Income\n\n\n\nWhat can you deduce about the interaction between Percent Salary Hike and Attrition?\nANSWER: D. It’s difficult to deduce anything based on the visualization\n\n\n\nWhat can you deduce about the interaction between Stock Option Level and Attrition?\nANSWER: B. Those that are staying have a higher stock option level\n\n\n\nWhat can you deduce about the interaction between Environment Satisfaction and Attrition?\nANSWER: C. It’s difficult to deduce anything based on the visualization\n\n\n\nWhat can you deduce about the interaction between Work Life Balance and Attrition\nANSWER: B. Those that are staying have a higher density of 2’s and 3’s\n\n\n\nWhat Can you deduce about the interaction between Job Involvement and Attrition?\nANSWER: A. Those that are leaving have a lower density of 3’s and 4’s\n\n\n\nWhat can you deduce about the interaction between Over Time and Attrition?\nANSWER: A. The proportion of those leaving that are working Over Time are high compared to those that are not leaving\n\n\n\nWhat can you deduce about the interaction between Training Times Last Year and Attrition\nANSWER: B. People that leave tend to have less annual trainings\n\n\n\nWhat can you deduce about the interaction between Years At Company and Attrition\nANSWER: B. People that leave tend to have less working years at the company\n\n\n\nWhat can you deduce about the interaction between Years Since Last Promotion and Attrition?\nANSWER: C. It’s difficult to deduce anything based on the visualization"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#compensation-features",
    "href": "content/01_journal/03_ml_h2o_1.html#compensation-features",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Monthly Income and Attrition?\nANSWER: C. Those that are leaving have a lower Monthly Income"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#compensation-features-1",
    "href": "content/01_journal/03_ml_h2o_1.html#compensation-features-1",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Percent Salary Hike and Attrition?\nANSWER: D. It’s difficult to deduce anything based on the visualization"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#compensation-features-2",
    "href": "content/01_journal/03_ml_h2o_1.html#compensation-features-2",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Stock Option Level and Attrition?\nANSWER: B. Those that are staying have a higher stock option level"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#survey-results",
    "href": "content/01_journal/03_ml_h2o_1.html#survey-results",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Environment Satisfaction and Attrition?\nANSWER: C. It’s difficult to deduce anything based on the visualization"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#survey-results-1",
    "href": "content/01_journal/03_ml_h2o_1.html#survey-results-1",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Work Life Balance and Attrition\nANSWER: B. Those that are staying have a higher density of 2’s and 3’s"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#performance-data",
    "href": "content/01_journal/03_ml_h2o_1.html#performance-data",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What Can you deduce about the interaction between Job Involvement and Attrition?\nANSWER: A. Those that are leaving have a lower density of 3’s and 4’s"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#work-life-features",
    "href": "content/01_journal/03_ml_h2o_1.html#work-life-features",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Over Time and Attrition?\nANSWER: A. The proportion of those leaving that are working Over Time are high compared to those that are not leaving"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#training-and-education",
    "href": "content/01_journal/03_ml_h2o_1.html#training-and-education",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Training Times Last Year and Attrition\nANSWER: B. People that leave tend to have less annual trainings"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#time-based-features",
    "href": "content/01_journal/03_ml_h2o_1.html#time-based-features",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Years At Company and Attrition\nANSWER: B. People that leave tend to have less working years at the company"
  },
  {
    "objectID": "content/01_journal/03_ml_h2o_1.html#time-based-features-1",
    "href": "content/01_journal/03_ml_h2o_1.html#time-based-features-1",
    "title": "Automated machine learning with H2O part 1",
    "section": "",
    "text": "What can you deduce about the interaction between Years Since Last Promotion and Attrition?\nANSWER: C. It’s difficult to deduce anything based on the visualization"
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_ml_h2o_2_and_performance_measures.html",
    "href": "content/01_journal/04_ml_h2o_2_and_performance_measures.html",
    "title": "Automated machine learning with H2O part 2 AND Performance Measure",
    "section": "",
    "text": "Note\n\n\n\nSince h2o requires java 64 bit, and I have been working on the challenges in kaggle.com. I will still publish this, and I will also include the notebook file called ‘automated-ml-with-h2o-2.ipynb’ in the github workspace. In that notebook you can see the finished challenges."
  },
  {
    "objectID": "content/01_journal/04_ml_h2o_2_and_performance_measures.html#libraries",
    "href": "content/01_journal/04_ml_h2o_2_and_performance_measures.html#libraries",
    "title": "Automated machine learning with H2O part 2 AND Performance Measure",
    "section": "1.1 Libraries",
    "text": "1.1 Libraries\n\nlibrary(h2o)\n\n#&gt; Warning: Paket 'h2o' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; \n#&gt; ----------------------------------------------------------------------\n#&gt; \n#&gt; Your next step is to start H2O:\n#&gt;     &gt; h2o.init()\n#&gt; \n#&gt; For H2O package documentation, ask for help:\n#&gt;     &gt; ??h2o\n#&gt; \n#&gt; After starting H2O, you can use the Web UI at http://localhost:54321\n#&gt; For more information visit https://docs.h2o.ai\n#&gt; \n#&gt; ----------------------------------------------------------------------\n\n\n#&gt; \n#&gt; Attache Paket: 'h2o'\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:stats':\n#&gt; \n#&gt;     cor, sd, var\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:base':\n#&gt; \n#&gt;     %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n#&gt;     colnames&lt;-, ifelse, is.character, is.factor, is.numeric, log,\n#&gt;     log10, log1p, log2, round, signif, trunc\n\n#library(cowplot)\nlibrary(glue)\nlibrary(tidyverse)\n\n#&gt; Warning: Paket 'tidyverse' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'ggplot2' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tibble' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tidyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'readr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'purrr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'dplyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'stringr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'forcats' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'lubridate' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1\n\n\n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ lubridate::day()   masks h2o::day()\n#&gt; ✖ dplyr::filter()    masks stats::filter()\n#&gt; ✖ lubridate::hour()  masks h2o::hour()\n#&gt; ✖ dplyr::lag()       masks stats::lag()\n#&gt; ✖ lubridate::month() masks h2o::month()\n#&gt; ✖ lubridate::week()  masks h2o::week()\n#&gt; ✖ lubridate::year()  masks h2o::year()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(readxl)\n\n#&gt; Warning: Paket 'readxl' wurde unter R Version 4.2.3 erstellt\n\nlibrary(rsample)\n\n#&gt; Warning: Paket 'rsample' wurde unter R Version 4.2.3 erstellt\n\nlibrary(recipes)\n\n#&gt; Warning: Paket 'recipes' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; \n#&gt; Attache Paket: 'recipes'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:stringr':\n#&gt; \n#&gt;     fixed\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:stats':\n#&gt; \n#&gt;     step\n\nlibrary(PerformanceAnalytics)  # for skewness  \n\n#&gt; Lade nötiges Paket: xts\n#&gt; Lade nötiges Paket: zoo\n#&gt; \n#&gt; Attache Paket: 'zoo'\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:base':\n#&gt; \n#&gt;     as.Date, as.Date.numeric\n#&gt; \n#&gt; \n#&gt; Attache Paket: 'xts'\n#&gt; \n#&gt; Die folgenden Objekte sind maskiert von 'package:dplyr':\n#&gt; \n#&gt;     first, last\n#&gt; \n#&gt; \n#&gt; Attache Paket: 'PerformanceAnalytics'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:graphics':\n#&gt; \n#&gt;     legend"
  },
  {
    "objectID": "content/01_journal/04_ml_h2o_2_and_performance_measures.html#preprocessing",
    "href": "content/01_journal/04_ml_h2o_2_and_performance_measures.html#preprocessing",
    "title": "Automated machine learning with H2O part 2 AND Performance Measure",
    "section": "2.1 2 Preprocessing",
    "text": "2.1 2 Preprocessing\nGet varaibles names list\n\ncolumn_names &lt;- names(product_backorders_tbl)\nprint(column_names)\n\n#&gt;  [1] \"sku\"               \"national_inv\"      \"lead_time\"        \n#&gt;  [4] \"in_transit_qty\"    \"forecast_3_month\"  \"forecast_6_month\" \n#&gt;  [7] \"forecast_9_month\"  \"sales_1_month\"     \"sales_3_month\"    \n#&gt; [10] \"sales_6_month\"     \"sales_9_month\"     \"min_bank\"         \n#&gt; [13] \"potential_issue\"   \"pieces_past_due\"   \"perf_6_month_avg\" \n#&gt; [16] \"perf_12_month_avg\" \"local_bo_qty\"      \"deck_risk\"        \n#&gt; [19] \"oe_constraint\"     \"ppap_risk\"         \"stop_auto_buy\"    \n#&gt; [22] \"rev_stop\"          \"went_on_backorder\"\n\n\nSplit data\n\n# Split into test and train\nset.seed(seed = 1113)\nsplit_obj_challenge_1 &lt;- rsample::initial_split(product_backorders_tbl, prop = 0.8)\n\n# Assign training and test data\ntrain_readable_tbl_challenge_1 &lt;- training(split_obj_challenge_1)\ntest_readable_tbl_challenge_1  &lt;- testing(split_obj_challenge_1)\n\nFunction for histogram facet\n\n# Plot Faceted Histgoram function\n\n# To create a function and test it, we can assign our data temporarily to data\ndata &lt;- train_readable_tbl_challenge_1 \n\nplot_hist_facet &lt;- function(data, fct_reorder = FALSE, fct_rev = FALSE, \n                            bins = 10, fill = \"#2dc6d6\", color = \"white\", \n                            ncol = 5, scale = \"free\") {\n    \n    data_factored &lt;- data %&gt;%\n    \n        # Convert input to make the function fail safe \n        # (if other content might be provided)\n        mutate_if(is.character, as.factor) %&gt;%\n        mutate_if(is.factor, as.numeric) %&gt;%\n        \n        # Data must be in long format to make facets\n        pivot_longer(cols = everything(),\n                     names_to = \"key\",\n                     values_to = \"value\",\n                     # set key = factor() to keep the order\n                     names_transform = list(key = forcats::fct_inorder)) \n    \n    if (fct_reorder) {\n        data_factored &lt;- data_factored %&gt;%\n            mutate(key = as.character(key) %&gt;% as.factor())\n    }\n    \n    if (fct_rev) {\n        data_factored &lt;- data_factored %&gt;%\n            mutate(key = fct_rev(key))\n    }\n    \n    g &lt;- data_factored %&gt;%\n        ggplot(aes(x = value, group = key)) +\n        geom_histogram(bins = bins, fill = fill, color = color) +\n        facet_wrap(~ key, ncol = ncol, scale = scale)\n    \n    return(g)\n    \n}\n\nHistogram Facet\n\ntrain_readable_tbl_challenge_1 %&gt;% \n  relocate(went_on_backorder) %&gt;% \n  plot_hist_facet()\n\n#&gt; Warning: Removed 876 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\nzero variance features\n\nrecipe_obj_challenge_1 &lt;- recipe(went_on_backorder ~ ., data = train_readable_tbl_challenge_1) %&gt;%\n    step_zv(all_predictors()) %&gt;%\n    step_dummy(all_nominal()) \n\nrecipe_obj_challenge_1 %&gt;% \n      prep()\n\n#&gt; \n\n\n#&gt; ── Recipe ──────────────────────────────────────────────────────────────────────\n\n\n#&gt; \n\n\n#&gt; ── Inputs\n\n\n#&gt; Number of variables by role\n\n\n#&gt; outcome:    1\n#&gt; predictor: 22\n\n\n#&gt; \n\n\n#&gt; ── Training information\n\n\n#&gt; Training data contained 15242 data points and 876 incomplete rows.\n\n\n#&gt; \n\n\n#&gt; ── Operations\n\n\n#&gt; • Zero variance filter removed: &lt;none&gt; | Trained\n\n\n#&gt; • Dummy variables from: potential_issue, deck_risk, ... | Trained\n\n\nBake train and test data\n\nprep_recipe_challenge_1 &lt;- prep(recipe_obj_challenge_1)\n\ntrain_tbl_challenge_1 &lt;- bake(prep_recipe_challenge_1, new_data = train_readable_tbl_challenge_1)\n\ntrain_tbl_challenge_1 %&gt;% glimpse()\n\n#&gt; Rows: 15,242\n#&gt; Columns: 23\n#&gt; $ sku                   &lt;dbl&gt; 1543349, 1411689, 1672722, 1119722, 1817291, 121…\n#&gt; $ national_inv          &lt;dbl&gt; 16, 147, 12, 109, 238, 2, 0, 217, 2, 6, 3, 0, 32…\n#&gt; $ lead_time             &lt;dbl&gt; 4, 2, 8, 2, 2, 8, 2, NA, NA, 9, 12, 2, 12, 8, 8,…\n#&gt; $ in_transit_qty        &lt;dbl&gt; 0, 46, 1, 0, 26, 0, 0, 73, 0, 0, 1, 0, 97, 0, 0,…\n#&gt; $ forecast_3_month      &lt;dbl&gt; 0, 270, 48, 0, 305, 0, 8, 0, 0, 0, 0, 18, 767, 0…\n#&gt; $ forecast_6_month      &lt;dbl&gt; 0, 530, 96, 0, 503, 0, 16, 0, 0, 0, 0, 18, 1577,…\n#&gt; $ forecast_9_month      &lt;dbl&gt; 0, 800, 144, 0, 701, 0, 20, 0, 0, 0, 0, 27, 2537…\n#&gt; $ sales_1_month         &lt;dbl&gt; 0, 127, 15, 0, 124, 0, 0, 104, 0, 0, 0, 7, 277, …\n#&gt; $ sales_3_month         &lt;dbl&gt; 0, 416, 43, 0, 312, 0, 0, 400, 0, 1, 0, 10, 965,…\n#&gt; $ sales_6_month         &lt;dbl&gt; 0, 679, 70, 0, 564, 0, 0, 814, 0, 1, 0, 19, 1884…\n#&gt; $ sales_9_month         &lt;dbl&gt; 0, 952, 95, 50, 796, 0, 0, 1294, 0, 2, 0, 28, 27…\n#&gt; $ min_bank              &lt;dbl&gt; 0, 92, 1, 3, 85, 0, 1, 105, 0, 0, 0, 1, 298, 0, …\n#&gt; $ pieces_past_due       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ perf_6_month_avg      &lt;dbl&gt; 0.73, 0.90, 0.50, 1.00, 1.00, 0.82, -99.00, -99.…\n#&gt; $ perf_12_month_avg     &lt;dbl&gt; 0.78, 0.93, 0.50, 0.99, 1.00, 0.87, -99.00, -99.…\n#&gt; $ local_bo_qty          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ potential_issue_Yes   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ deck_risk_Yes         &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, …\n#&gt; $ oe_constraint_Yes     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ ppap_risk_Yes         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, …\n#&gt; $ stop_auto_buy_Yes     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, …\n#&gt; $ rev_stop_Yes          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n#&gt; $ went_on_backorder_Yes &lt;dbl&gt; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, …\n\ntest_tbl_challenge_1 &lt;- bake(prep_recipe_challenge_1, new_data = test_readable_tbl_challenge_1)"
  },
  {
    "objectID": "content/01_journal/05_black_box_lime.html",
    "href": "content/01_journal/05_black_box_lime.html",
    "title": "Black Box Models with LIME",
    "section": "",
    "text": "1 Challenge\n\n\n\n\n\n\nNote\n\n\n\nSince h2o requires java 64 bit, and I have been working on the challenges in kaggle.com. I will still publish this, and I will also include the notebook file called ‘black-box-models-lime.ipynb’ in the github workspace. In that notebook you can see the finished challenges"
  },
  {
    "objectID": "content/01_journal/06_deep_learning.html",
    "href": "content/01_journal/06_deep_learning.html",
    "title": "Deep Learning",
    "section": "",
    "text": "Note\n\n\n\nPlease see ‘deep-learning.ipynb’ in the github work folder. Tensorflow package installation in Rstudio is having problems with the currently installed tensorflow in python in my computer. So please look at the ‘deep-learning.ipynb’.\n\n\n\n1 Libraries\n\nlibrary(tidyverse)\n\n#&gt; Warning: Paket 'tidyverse' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'ggplot2' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tibble' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'tidyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'readr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'purrr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'dplyr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'stringr' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'forcats' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; Warning: Paket 'lubridate' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(keras)\n\n#&gt; Warning: Paket 'keras' wurde unter R Version 4.2.3 erstellt\n\nlibrary(lime)\n\n#&gt; Warning: Paket 'lime' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; \n#&gt; Attache Paket: 'lime'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:dplyr':\n#&gt; \n#&gt;     explain\n\nlibrary(rsample)\n\n#&gt; Warning: Paket 'rsample' wurde unter R Version 4.2.3 erstellt\n\nlibrary(recipes)\n\n#&gt; Warning: Paket 'recipes' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; \n#&gt; Attache Paket: 'recipes'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:stringr':\n#&gt; \n#&gt;     fixed\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:stats':\n#&gt; \n#&gt;     step\n\nlibrary(yardstick)\n\n#&gt; Warning: Paket 'yardstick' wurde unter R Version 4.2.3 erstellt\n\n\n#&gt; \n#&gt; Attache Paket: 'yardstick'\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:keras':\n#&gt; \n#&gt;     get_weights\n#&gt; \n#&gt; Das folgende Objekt ist maskiert 'package:readr':\n#&gt; \n#&gt;     spec\n\nlibrary(corrr)\n\n#&gt; Warning: Paket 'corrr' wurde unter R Version 4.2.3 erstellt\n\nlibrary(readxl)\n\n#&gt; Warning: Paket 'readxl' wurde unter R Version 4.2.3 erstellt\n\nlibrary(forcats)\n\n\n\n2 import data\n\nchurn_data_raw &lt;- read_csv(\"datas/WA_Fn-UseC_-Telco-Customer-Churn.csv\")\n\n#&gt; Rows: 7043 Columns: 21\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr (17): customerID, gender, Partner, Dependents, PhoneService, MultipleLin...\n#&gt; dbl  (4): SeniorCitizen, tenure, MonthlyCharges, TotalCharges\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nglimpse(churn_data_raw)\n\n#&gt; Rows: 7,043\n#&gt; Columns: 21\n#&gt; $ customerID       &lt;chr&gt; \"7590-VHVEG\", \"5575-GNVDE\", \"3668-QPYBK\", \"7795-CFOCW…\n#&gt; $ gender           &lt;chr&gt; \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\",…\n#&gt; $ SeniorCitizen    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n#&gt; $ Partner          &lt;chr&gt; \"Yes\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes…\n#&gt; $ Dependents       &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\"…\n#&gt; $ tenure           &lt;dbl&gt; 1, 34, 2, 45, 2, 8, 22, 10, 28, 62, 13, 16, 58, 49, 2…\n#&gt; $ PhoneService     &lt;chr&gt; \"No\", \"Yes\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"No\", …\n#&gt; $ MultipleLines    &lt;chr&gt; \"No phone service\", \"No\", \"No\", \"No phone service\", \"…\n#&gt; $ InternetService  &lt;chr&gt; \"DSL\", \"DSL\", \"DSL\", \"DSL\", \"Fiber optic\", \"Fiber opt…\n#&gt; $ OnlineSecurity   &lt;chr&gt; \"No\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"No\", \"No\", \"Yes\", \"…\n#&gt; $ OnlineBackup     &lt;chr&gt; \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"N…\n#&gt; $ DeviceProtection &lt;chr&gt; \"No\", \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"No\", \"No\", \"Y…\n#&gt; $ TechSupport      &lt;chr&gt; \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"No\", \"Yes…\n#&gt; $ StreamingTV      &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"Yes\", \"No\", \"Ye…\n#&gt; $ StreamingMovies  &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"Yes…\n#&gt; $ Contract         &lt;chr&gt; \"Month-to-month\", \"One year\", \"Month-to-month\", \"One …\n#&gt; $ PaperlessBilling &lt;chr&gt; \"Yes\", \"No\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"Yes\", \"No\", …\n#&gt; $ PaymentMethod    &lt;chr&gt; \"Electronic check\", \"Mailed check\", \"Mailed check\", \"…\n#&gt; $ MonthlyCharges   &lt;dbl&gt; 29.85, 56.95, 53.85, 42.30, 70.70, 99.65, 89.10, 29.7…\n#&gt; $ TotalCharges     &lt;dbl&gt; 29.85, 1889.50, 108.15, 1840.75, 151.65, 820.50, 1949…\n#&gt; $ Churn            &lt;chr&gt; \"No\", \"No\", \"Yes\", \"No\", \"Yes\", \"Yes\", \"No\", \"No\", \"Y…\n\n\n\n\n3 preprocessing\n\nchurn_data_tbl &lt;- churn_data_raw %&gt;%\n                  select(-customerID) %&gt;%\n                  na.omit(churn_data_raw$TotalCharges) %&gt;%\n                  select(Churn, everything())\n\n#churn_data_tbl\n\n\n\n4 split 80/20\n\n# Split test/training sets\nset.seed(100)\n\ntrain_test_split &lt;- rsample::initial_split(churn_data_tbl, prop = 0.8)\ntrain_test_split\n\n#&gt; &lt;Training/Testing/Total&gt;\n#&gt; &lt;5625/1407/7032&gt;\n\n## &lt;Analysis/Assess/Total&gt;\n## &lt;5626/1406/7032&gt;\n\n# Retrieve train and test sets\ntrain_tbl &lt;- training(train_test_split)\ntest_tbl  &lt;- testing(train_test_split)\n\n\nchurn_data_tbl %&gt;% ggplot(aes(x = tenure)) + \n  geom_histogram(bins = 6, color = \"white\", fill =  \"#2DC6D6\") +\n  labs(\n    title = \"Tenure Counts With Six Bins\",\n    x     = \"tenure (month)\"\n  )\n\n\n\n\n\n\n\n\n\n# Determine if log transformation improves correlation \n# between TotalCharges and Churn\n\ntrain_tbl %&gt;%\n    select(Churn, TotalCharges) %&gt;%\n    mutate(\n        Churn = Churn %&gt;% as.factor() %&gt;% as.numeric(),\n        LogTotalCharges = log(TotalCharges)\n        ) %&gt;%\n    correlate() %&gt;%\n    focus(Churn) %&gt;%\n    fashion()\n\n#&gt; Correlation computed with\n#&gt; • Method: 'pearson'\n#&gt; • Missing treated using: 'pairwise.complete.obs'\n\n\n\n\n  \n\n\n\n\nchurn_data_tbl %&gt;% \n        pivot_longer(cols      = c(Contract, InternetService, MultipleLines, PaymentMethod), \n                     names_to  = \"feature\", \n                     values_to = \"category\") %&gt;% \n        ggplot(aes(category)) +\n          geom_bar(fill = \"#2DC6D6\") +\n          facet_wrap(~ feature, scales = \"free\") +\n          labs(\n            title = \"Features with multiple categories: Need to be one-hot encoded\"\n          ) +\n          theme(axis.text.x = element_text(angle = 25, \n                                           hjust = 1))\n\n\n\n\n\n\n\n\n\n\n5 Preprocessing with recipes\n\nrec_obj &lt;- recipe(Churn ~ ., data = train_tbl) %&gt;%\n    step_rm(Churn) %&gt;% \n    step_discretize(tenure, options = list(cuts = 6)) %&gt;%\n    step_log(TotalCharges) %&gt;%\n    step_dummy(all_nominal(), -all_outcomes(), one_hot = T) %&gt;%\n    step_center(all_predictors(), -all_outcomes()) %&gt;%\n    step_scale(all_predictors(), -all_outcomes()) %&gt;%\n    prep(data = train_tbl)\n\n\n\n6 Bake\n\n# Predictors\nx_train_tbl &lt;- bake(rec_obj , new_data = train_tbl )\nx_test_tbl  &lt;- bake(rec_obj , new_data = test_tbl )\n\n\n# Response variables for training and testing sets\ny_train_vec &lt;- ifelse(churn_data_tbl$Churn == \"Yes\", 1, 0)\ny_test_vec  &lt;- ifelse(test_tbl$Churn == \"Yes\", 1, 0)\n\n\n\n7 ANN\n\n\n8 Building our Artificial Neural Network\nmodel_keras &lt;- keras_model_sequential()\nmodel_keras %&gt;% # First hidden layer layer_dense( units = 16, kernel_initializer = “uniform”, activation = “relu”, input_shape = ncol(x_train_tbl)) %&gt;% # Dropout to prevent overfitting layer_dropout(rate = 0.1) %&gt;% # Second hidden layer layer_dense( units = 16, kernel_initializer = “uniform”, activation = “relu”) %&gt;% # Dropout to prevent overfitting layer_dropout(rate = 0.1) %&gt;% # Output layer layer_dense( units = 1, kernel_initializer = “uniform”, activation = “sigmoid”) %&gt;% # Compile ANN compile( optimizer = ‘adam’, loss = ‘binary_crossentropy’, metrics = c(‘accuracy’) ) model_keras\n\n\n9 Training\n\n\n10 Fit the keras model to the training data\nfit_keras &lt;- fit( model_keras, x = as.matrix(x_train_tbl), y = y_train_vec, batch_size = 50, epochs = 35, validation_split = 0.3 )\nfit_keras\n\n\n11 Plot\n\n\n12 Plot the training/validation history of our Keras model\nplot(fit_keras) + #geom_smooth(formula = y ~ x, method = “auto”, se = FALSE, color = “blue”) + labs(title = “Deep Learning Training Results”) + theme(legend.position = “bottom”, strip.placement = “inside”, strip.background = element_rect(fill = “grey”))\n\n\n13 make predictions\n\ntensorflow version is different, therefore the code has been adjusted\n\n\n\n14 Predicted Class\n#yhat_keras_class_vec &lt;- predict_classes(object = model_keras, x = as.matrix(x_test_tbl)) %&gt;% # as.vector()\n\n\n15 Predicted Class Probability\n#yhat_keras_prob_vec &lt;- predict_proba(object = model_keras, x = as.matrix(x_test_tbl)) %&gt;% # as.vector()\n\n\n16 Predicted Class\nyhat_keras_class_vec &lt;- predict(object = model_keras, x = as.matrix(x_test_tbl)) %&gt;% k_argmax() %&gt;% as.vector()\n\n\n17 Predicted Class Probability\nyhat_keras_prob_vec &lt;- predict(object = model_keras, x = as.matrix(x_test_tbl)) %&gt;% as.vector()\n\n\n18 Inspect performance\nestimates_keras_tbl &lt;- tibble( truth = as.factor(y_test_vec) %&gt;% fct_recode(yes = “1”, no = “0”), estimate = as.factor(yhat_keras_class_vec) %&gt;% fct_recode(yes = “1”, no = “0”), class_prob = yhat_keras_prob_vec )\nestimates_keras_tbl"
  },
  {
    "objectID": "content/01_journal/Test_Training.html",
    "href": "content/01_journal/Test_Training.html",
    "title": "Test page",
    "section": "",
    "text": "Note\n\n\n\nNotes go here ödnajkwdnöjanjlnald\nWith eval: false\nnumbers &lt;- 1:1000\n\n# This will print the first 10 elements of the vector numbers\nnumbers[1:10]\n\n# This will plot a histogram of 100 random elements of the vector numbers\nhist(sample(numbers, 100, replace = T))\nrandom calculate and print\na=5\nb=4\nc=a+b\nprint(paste0(c))\n\n#&gt; [1] \"9\"\nwith eval: true\nnumbers &lt;- 1:1000\n\n# This will print the first 10 elements of the vector numbers\nnumbers[1:10]\n\n#&gt;  [1]  1  2  3  4  5  6  7  8  9 10\n\n# This will plot a histogram of 100 random elements of the vector numbers\nhist(sample(numbers, 100, replace = T))\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/Test_Training.html#header-2",
    "href": "content/01_journal/Test_Training.html#header-2",
    "title": "Test page",
    "section": "2.1 Header 2",
    "text": "2.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/03_other/06_links.html#r-and-r-studio",
    "href": "content/03_other/06_links.html#r-and-r-studio",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual ."
  },
  {
    "objectID": "content/03_other/06_links.html#additional-r-resources",
    "href": "content/03_other/06_links.html#additional-r-resources",
    "title": "Links",
    "section": "",
    "text": "Google is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  }
]